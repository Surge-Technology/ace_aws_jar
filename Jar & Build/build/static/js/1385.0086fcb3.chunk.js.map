{"version":3,"file":"static/js/1385.0086fcb3.chunk.js","mappings":"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","sources":["views/dashboard/tables/StudentAttandList.js"],"sourcesContent":["import React,{useState,useEffect}  from 'react'\nimport { Col,Badge, Label,Card,CardBody, Row,Input,Button,Spinner } from \"reactstrap\";\nimport { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\nconst StudentAttandinitialData= {StudentAttandList:[],totalPages:\"\",currentPage:\"\",loader:false,startDate:'',endDate:\"\"}\nimport Axios from \"../../../hoc/axiosConfig\";\nimport Swal from 'sweetalert2';\nimport DatePicker from \"react-datepicker\";\nimport moment from 'moment/moment';\nimport { useNavigate } from \"react-router-dom\";\nexport default function StudentAttandList() {\n  const [studentData, setState] = useState(StudentAttandinitialData);\n  const {StudentAttandList,totalPages,currentPage,loader,startDate,endDate} =  studentData;\n  const navigate = useNavigate();\n  useEffect(()=>{\n    var someDate = new Date();\n    let StartDat = moment(someDate).format(\"YYYY-MM-DD\");\n      let endDat = moment(someDate).format(\"YYYY-MM-DD\");\n      Axios.get(`/student-attendance/${StartDat}/${endDat}`).then((res)=>{\n       setState((prevState)=>({\n          ...prevState, \n          startDate:someDate,\n          endDate:someDate,\n          StudentAttandList:res.data,loader:false\n        }))\n      }).catch(err=>{\n        Swal.fire( err.response.data.message, 'Please try again '  ) \n        setState((prevState)=>({...prevState,loader:false}))\n      })\n  },[])\n  const dateHandleChange=(name,date)=>{\n    if(name===\"startDate\"){\n      setState((prevState)=>({\n        ...prevState,\n        startDate:date\n      }))\n    }\n    if(name===\"endDate\"){\n      setState((prevState)=>({\n        ...prevState,\n        endDate:date\n      }))\n    }\n  }\n  const studentattendGetData=()=>{\n     if(startDate!==\"\" && endDate !== \"\"){\n      setState((prevState)=>({...prevState,loader:true}))\n      let StartDat = moment(startDate).format(\"YYYY-MM-DD\");\n      let endDat = moment(endDate).format(\"YYYY-MM-DD\");\n      Axios.get(`/student-attendance/${StartDat}/${endDat}`).then((res)=>{\n       setState((prevState)=>({\n          ...prevState, \n          StudentAttandList:res.data,loader:false\n        }))\n      }).catch(err=>{\n        Swal.fire( err.response.data.message, 'Please try again '  ) \n        setState((prevState)=>({...prevState,loader:false}))\n      })\n    }else{\n      Swal.fire({\n        position: 'center',\n        icon: 'warning',\n        title: 'Please Enter Some Date',\n        showConfirmButton: false,\n        timer: 1500\n      })\n    }\n  } \n  const absentCount = (cell, row) => {\n    let date1 = new Date(startDate);  \n    let date2 = new Date(endDate);   \n    let time_difference = date2.getTime() - date1.getTime();  \n    let days_difference = time_difference / (1000 * 60 * 60 * 24);\n    let totalcont = days_difference+1\n    let absent = totalcont-row.attendanceCount\n    let finalData = absent.toFixed(0)\n      return(<>{finalData?finalData:null}</>)\n  }\n  return (\n    <>\n     {loader?<Spinner\n      className='loaderr'\n       color=\"primary\"\n      > \n      Loading...\n    </Spinner>:null}\n        <CardBody className='cardbg'>          \n            <h4><b>Student Attendance List</b></h4>\n            <div className='height15'></div>\n          <Row>\n            <Col md={3}>\n            <Label>Start Date</Label>\n              <DatePicker\n                name=\"startDate\"\n                selected={startDate?new Date(startDate):null}\n                onChange={(date) => dateHandleChange(\"startDate\",date)}\n                placeholderText=\"mm/dd/yyyy\"\n              />\n            </Col>\n            <Col md={3}>\n              <Label>End Date</Label>\n              <DatePicker\n                selected={endDate}\n                onChange={(date) => dateHandleChange(\"endDate\",date)}\n                placeholderText=\"mm/dd/yyyy\"\n                minDate={startDate} \n              />\n            </Col>\n            <Col md={2} style={{marginTop:\"30px\"}}> \n              <Button type=\"button\" onClick={()=>{studentattendGetData()}}>Search</Button>\n            </Col>\n            <Col md={2} style={{marginTop:\"30px\"}}>\n              <Button type=\"button\" onClick={() => navigate(\"/dashboard\")} >Back</Button>\n            </Col>\n          </Row>\n          <hr/>\n          <Row>\n            <Col>\n            <BootstrapTable data={StudentAttandList} hover multiColumnSearch={true} version='4' search>\n              <TableHeaderColumn width=\"140\" dataField='name'  dataSort isKey>Name</TableHeaderColumn>\n              <TableHeaderColumn width=\"180\" dataField='masterName' dataSort>Master Name</TableHeaderColumn>\n              <TableHeaderColumn width=\"120\" dataField='program'  dataSort>Program</TableHeaderColumn>\n              <TableHeaderColumn width=\"100\" dataAlign='center' dataField=\"attendanceCount\" dataSort>Attn.Count</TableHeaderColumn>\n              <TableHeaderColumn width=\"100\" dataAlign='center' dataField='endTime'  dataFormat={absentCount}  dataSort>Absent Count</TableHeaderColumn>\n            </BootstrapTable>\n            </Col>\n          </Row>\n        </CardBody> \n    </>\n  )\n}\n"],"names":["StudentAttandinitialData","StudentAttandList","totalPages","currentPage","loader","startDate","endDate","_useState","useState","_useState2","_slicedToArray","studentData","setState","navigate","useNavigate","useEffect","someDate","Date","StartDat","moment","format","endDat","Axios","concat","then","res","prevState","_objectSpread","data","catch","err","Swal","response","message","dateHandleChange","name","date","_jsxs","_Fragment","children","_jsx","Spinner","className","color","CardBody","Row","Col","md","Label","DatePicker","selected","onChange","placeholderText","minDate","style","marginTop","Button","type","onClick","position","icon","title","showConfirmButton","timer","studentattendGetData","BootstrapTable","hover","multiColumnSearch","version","search","TableHeaderColumn","width","dataField","dataSort","isKey","dataAlign","dataFormat","cell","row","date1","finalData","getTime","attendanceCount","toFixed"],"sourceRoot":""}