{"version":3,"file":"static/js/2360.92da1a04.chunk.js","mappings":"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","sources":["views/dashboard/tables/InquiryDetailsList.js"],"sourcesContent":["import React,{useState,useEffect}  from 'react'\r\nimport { Col,Badge, Label,Card,CardBody, Row,Input,Button,Spinner } from \"reactstrap\";\r\nimport { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\r\nconst StudentAttandinitialData= {inquiryList:[],totalPages:\"\",currentPage:\"\",loader:false,startDate:'',endDate:\"\"}\r\nimport Axios from \"../../../hoc/axiosConfig\";\r\nimport Swal from 'sweetalert2';\r\nimport DatePicker from \"react-datepicker\";\r\nimport moment from 'moment/moment';\r\nimport { useNavigate } from \"react-router-dom\";\r\nexport default function InquiryDetailsList() {\r\n  const [studentData, setState] = useState(StudentAttandinitialData);\r\n  const {inquiryList,totalPages,currentPage,loader,startDate,endDate} =  studentData;\r\n  const navigate = useNavigate();\r\n  useEffect(()=>{\r\n    // var someDate = new Date();\r\n    // let StartDat = moment(someDate).format(\"YYYY-MM-DD\");\r\n    //   let endDat = moment(someDate).format(\"YYYY-MM-DD\");\r\n    //   Axios.get(`/dashboard/inquiry/${StartDat}/${endDat}`).then((res)=>{\r\n    //     if(res.status===200||res.status===201){\r\n    //       setState((prevState)=>({\r\n    //         ...prevState, \r\n    //         inquiryList:res.data?res.data:[],\r\n    //         loader:false\r\n    //       }))\r\n    //     }\r\n    //   }).catch(err=>{\r\n    //     Swal.fire( err.response.data.message, 'Please try again '  ) \r\n    //     setState((prevState)=>({...prevState,loader:false}))\r\n    //   })\r\n  },[])\r\n  const dateHandleChange=(name,date)=>{\r\n    if(name===\"startDate\"){\r\n      setState((prevState)=>({\r\n        ...prevState,\r\n        startDate:date\r\n      }))\r\n    }\r\n    if(name===\"endDate\"){\r\n      setState((prevState)=>({\r\n        ...prevState,\r\n        endDate:date\r\n      }))\r\n    }\r\n  }\r\n  const studentattendGetData=()=>{\r\n    \r\n    if(startDate!==\"\" && endDate !== \"\"){\r\n      setState((prevState)=>({...prevState,loader:true}))\r\n      let StartDat = moment(startDate).format(\"YYYY-MM-DD\");\r\n      let endDat = moment(endDate).format(\"YYYY-MM-DD\");\r\n      Axios.get(`/dashboard/inquiry/${StartDat}/${endDat}`).then((res)=>{\r\n        if(res.status===200||res.status===201){\r\n          setState((prevState)=>({\r\n            ...prevState, \r\n            inquiryList:res.data?res.data:[],\r\n            loader:false\r\n          }))\r\n        }else{\r\n          setState((prevState)=>({\r\n            ...prevState, \r\n             loader:false\r\n          }))\r\n        }\r\n       }).catch(err=>{\r\n        Swal.fire( err.response.data.message, 'Please try again '  ) \r\n        setState((prevState)=>({...prevState,loader:false}))\r\n      })\r\n    }else{\r\n      Swal.fire({\r\n        position: 'center',\r\n        icon: 'warning',\r\n        title: 'Please Enter Some Date',\r\n        showConfirmButton: false,\r\n        timer: 1500\r\n      })\r\n    }\r\n  }\r\n  const statusHandleChange =()=>{\r\n    return(<><Badge color=\"primary\">Active</Badge></>)\r\n  }\r\n  const timeDisplay = (cell, row) => {\r\n    return cell !== null && cell !== undefined ? moment(cell, [\"HH:mm\"]).format(\"hh:mm a\") : \"\";\r\n  }\r\n  return (\r\n    <>\r\n     {loader?<Spinner\r\n      className='loaderr'\r\n       color=\"primary\"\r\n      > \r\n      Loading...\r\n    </Spinner>:null}\r\n       <Card >\r\n            <CardBody className='cardbg'>          \r\n                 <h4><b>Inquiry Details List</b></h4>\r\n                 <div className='height15'></div>\r\n              <Row>\r\n                <Col md={3}>\r\n                <Label>Start Date</Label>\r\n                  <DatePicker\r\n                    name=\"startDate\"\r\n                   // selected={startDate?new Date(startDate):null}\r\n                   selected={startDate}\r\n                    onChange={(date) => dateHandleChange(\"startDate\",date)}\r\n                    placeholderText=\"mm/dd/yyyy\"\r\n                  />\r\n                </Col>\r\n                <Col md={3}>\r\n                  <Label>End Date</Label>\r\n                  <DatePicker\r\n                    selected={endDate}\r\n                    onChange={(date) => dateHandleChange(\"endDate\",date)}\r\n                    placeholderText=\"mm/dd/yyyy\"\r\n                    minDate={startDate} \r\n                  />\r\n                </Col>\r\n                <Col md={2} style={{marginTop:\"30px\"}}> \r\n                  <Button type=\"button\" onClick={()=>{studentattendGetData()}}>Search</Button>\r\n                </Col>\r\n                <Col md={2} style={{marginTop:\"30px\"}}>\r\n                  <Button type=\"button\" onClick={() => navigate(\"/dashboard\")} >Back</Button>\r\n                </Col>\r\n              </Row>\r\n              <hr/>\r\n              <Row>\r\n                <Col> \r\n                <BootstrapTable data={inquiryList} hover multiColumnSearch={true} version='4' search>\r\n                  <TableHeaderColumn width=\"140\" dataField='name'  dataSort isKey>Name</TableHeaderColumn>\r\n                    <TableHeaderColumn width=\"120\" dataField='batch'    dataSort>Class</TableHeaderColumn>\r\n                  {/* <TableHeaderColumn width=\"100\" dataField='MasterName'  dataFormat={statusHandleChange} dataSort>Status</TableHeaderColumn> */}\r\n                  <TableHeaderColumn width=\"100\" dataField='startTime' dataFormat={timeDisplay} dataSort>Start Time</TableHeaderColumn>\r\n                  <TableHeaderColumn width=\"100\" dataField='endTime'  dataFormat={timeDisplay}  dataSort>End Time</TableHeaderColumn>\r\n                  <TableHeaderColumn width=\"100\"  dataField=\"attendanceCount\" dataSort>Attn.count</TableHeaderColumn>\r\n                </BootstrapTable>\r\n                </Col>\r\n              </Row>\r\n            </CardBody>\r\n          </Card>\r\n    </>\r\n  )\r\n}\r\n"],"names":["StudentAttandinitialData","inquiryList","totalPages","currentPage","loader","startDate","endDate","InquiryDetailsList","_useState","useState","_useState2","_slicedToArray","studentData","setState","navigate","useNavigate","useEffect","dateHandleChange","name","date","prevState","_objectSpread","timeDisplay","cell","row","undefined","moment","format","_jsxs","_Fragment","children","_jsx","Spinner","className","color","Card","CardBody","Row","Col","md","Label","DatePicker","selected","onChange","placeholderText","minDate","style","marginTop","Button","type","onClick","StartDat","endDat","Axios","concat","then","res","status","data","catch","err","Swal","response","message","position","icon","title","showConfirmButton","timer","studentattendGetData","BootstrapTable","hover","multiColumnSearch","version","search","TableHeaderColumn","width","dataField","dataSort","isKey","dataFormat"],"sourceRoot":""}