{"version":3,"file":"static/js/2467.21e4ef6b.chunk.js","mappings":"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","sources":["views/Events/AudienceGroup/EventAudienceGroup.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Link, useNavigate ,useParams} from \"react-router-dom\";\r\n import { Card ,CardBody,CardFooter, Row,  Input,  Button,Spinner } from \"reactstrap\";\r\nimport { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\r\n import Axios from \"../../../hoc/axiosConfig\";\r\n import \"../Studentevent/studentEvent.css\"\r\nimport axios from 'axios';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport Swal from 'sweetalert2';\r\nconst stEventField={studentList:\"\",selectedStudents:[],name:\"\",loader:false}\r\nexport default function EventAudienceGroup() { \r\n    const [eventGroupData,setState] =useState(stEventField);\r\n   const{studentList,selectedStudents,name ,loader}=eventGroupData;\r\n   const navigate = useNavigate();\r\n   const params = useParams();\r\n   const selectedRow = {\r\n    mode: 'checkbox',\r\n    showOnlySelected: true,\r\n    onSelect: (row, isSelected, rowIndex, e) => {\r\n        if (isSelected) {\r\n        const data = selectedStudents\r\n        data.push(row)\r\n        setState((prevState)=>({\r\n          ...prevState,selectedStudents:data\r\n        }))\r\n      } else {\r\n        const selectedData= []\r\n        selectedStudents.map((mapdata,index)=>{\r\n          if(mapdata.id!==row.id){\r\n            selectedData.push(mapdata)\r\n          }\r\n        })\r\n        setTimeout(() => {\r\n          setState((prevState)=>({\r\n            ...prevState,selectedStudents:selectedData\r\n          }))\r\n        }, 500);\r\n      }\r\n    },\r\n    onSelectAll: (isSelect, rows, e) => {\r\n      if (isSelect) {\r\n        setState((prevState)=>({\r\n          ...prevState,\r\n          selectedStudents:rows\r\n        }))\r\n      }\r\n      else {\r\n        setState((prevState)=>({\r\n          ...prevState,\r\n          selectedStudents:[]\r\n        }))\r\n      }\r\n    }\r\n  };\r\n  useEffect(()=>{\r\n    Axios.get(`event/${params.id}/event-registration`).then((res) => {\r\n       let eventDat = []\r\n      res.data.map((mapData)=>{\r\n        if(mapData.guestStudent){\r\n             eventDat.push({\r\n              \"id\": mapData.id,\r\n              \"guestStudent\": {\r\n                  \"id\":mapData.guestStudent.id,\r\n                  \"firstName\": mapData.guestStudent.firstName,\r\n                  \"lastName\": mapData.guestStudent.lastName,\r\n                  \"phone\": mapData.guestStudent.phone,\r\n                  \"email\": mapData.guestStudent.email\r\n              },\r\n              \"totalFee\": mapData.totalFee\r\n          })\r\n          }else{\r\n            eventDat.push({\r\n                  \"id\": mapData.id,\r\n                  \"student\": {\r\n                      \"id\":mapData.student.id,\r\n                      \"firstName\": mapData.student.firstName,\r\n                      \"lastName\": mapData.student.lastName,\r\n                      \"phone\": mapData.student.phone,\r\n                      \"email\": mapData.student.email\r\n                  },\r\n                  \"totalFee\": mapData.totalFee\r\n              })\r\n          }\r\n      })\r\n    setState((prevState)=>({\r\n      ...prevState,\r\n      studentList:eventDat\r\n    }))\r\n    }).catch((err) => {\r\n      Swal.fire( err?err.response.data.message:null, 'Please try again '  ) \r\n    })\r\n  },[])\r\n  const nameHandleChange= (e)=>{\r\n    setState((prevState)=>({\r\n      ...prevState,\r\n      name:e.target.value\r\n    }))\r\n  }\r\n  const createCustomShowSelectButton = (onClick, showSelected) => {\r\n    return (\r\n      < >\r\n      <Input name=\"name\" type=\"text\" value={name} placeholder=\"Enter Group Name\" onChange={nameHandleChange} invalid={name===\"\"?true:false}/>\r\n    </>\r\n    );\r\n  }\r\n  const options = {\r\n    showSelectedOnlyBtn: createCustomShowSelectButton\r\n  };\r\n  const displayFullName = (cell, row) => {\r\n    return(<span>{row.student===undefined?`${row.guestStudent.firstName} ${row.guestStudent.lastName}`:`${row.student.firstName} ${row.student.lastName}`}</span>)\r\n  }\r\n  const displayEmail = (cell, row) => {\r\n    return(<span>{row.student===undefined?`${row.guestStudent.email}`:`${row.student.email}`}</span>)\r\n  }\r\n  const displayPhone = (cell, row) => {\r\n    return(<span>{row.student===undefined?`${row.guestStudent.phone}`:`${row.student.phone}`}</span>)\r\n  }\r\n  const saveAudienceDataHandle = ()=>{\r\n     if(name!==\"\"){\r\n      setState((prevState)=>({...prevState,loader:true}));\r\n      const payload = {\r\n        \"name\":name,\r\n        \"eventRegistration\":selectedStudents,\r\n      }\r\n      axios.defaults.headers.common['Authorization'] =  \"Bearer \" + localStorage.getItem(\"token\");\r\n      axios.post(`${process.env.REACT_APP_BASE_URL}/primary-audience`,payload).then((res)=>{\r\n          toast.success(\"Created successfully\", { theme: \"colored\" })\r\n         setState((prevState)=>({...prevState,loader:false}));\r\n         setTimeout(() => {\r\n          navigate(`/events/createcommunication/${params.id}/${name}/${res.data.id}`)\r\n        }, 1000);\r\n      }).catch(err=>{\r\n        setState((prevState)=>({...prevState,loader:false}));\r\n        Swal.fire(\r\n                err.response.data.message,\r\n                 'Please try again '\r\n              )\r\n      })\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n    {loader?<Spinner\r\n      className='loaderr'\r\n       color=\"primary\"\r\n      > \r\n      Loading...\r\n    </Spinner>:null} \r\n    <ToastContainer /> \r\n      <Card className='cardm'>\r\n       <CardBody className='cardbg' >\r\n       <h5><strong>New Audience</strong></h5>\r\n         <Card className='cardbgw'>                           \r\n           <CardBody>\r\n             <Row className='rowborder1'>\r\n                <BootstrapTable data={studentList} options={options} hover multiColumnSearch={false} id=\"stickyid\"  selectRow={selectedRow}  tableContainerClass='my-custom-class1' version='4'>\r\n                    <TableHeaderColumn width=\"140\" dataField='firstName'  dataSort dataFormat={displayFullName}>Student Name</TableHeaderColumn>\r\n                    <TableHeaderColumn width=\"180\" dataField='email' dataSort  dataFormat={displayEmail}>Email</TableHeaderColumn>\r\n                    <TableHeaderColumn width=\"120\" dataField='phone'  dataSort dataFormat={displayPhone}>Phone</TableHeaderColumn>\r\n                    <TableHeaderColumn width=\"5\" dataField='id'  dataSort hidden isKey>unique field</TableHeaderColumn>\r\n                </BootstrapTable>\r\n             </Row><div className='height15'></div>\r\n            </CardBody>\r\n              <CardFooter className='centerTextalign'>\r\n                <Button type=\"button\" color='primary' className='btnbg' size=\"sm\" onClick={()=>navigate(`/events/eventregister/${params.id}`)}  >Cancel</Button>\r\n                <Button type=\"button\" color='primary'  size=\"sm\" onClick={()=>{saveAudienceDataHandle()}}  >Save Audience</Button>\r\n              </CardFooter>      \r\n         </Card>\r\n        </CardBody>\r\n     </Card>\r\n    </>\r\n  )\r\n}\r\n"],"names":["stEventField","studentList","selectedStudents","name","loader","EventAudienceGroup","_useState","useState","_useState2","_slicedToArray","eventGroupData","setState","navigate","useNavigate","params","useParams","selectedRow","mode","showOnlySelected","onSelect","row","isSelected","rowIndex","e","data","push","prevState","_objectSpread","selectedData","map","mapdata","index","id","setTimeout","onSelectAll","isSelect","rows","useEffect","Axios","concat","then","res","eventDat","mapData","guestStudent","firstName","lastName","phone","email","totalFee","student","catch","err","Swal","response","message","nameHandleChange","target","value","options","showSelectedOnlyBtn","onClick","showSelected","_jsx","_Fragment","children","Input","type","placeholder","onChange","invalid","_jsxs","Spinner","className","color","ToastContainer","Card","CardBody","Row","BootstrapTable","hover","multiColumnSearch","selectRow","tableContainerClass","version","TableHeaderColumn","width","dataField","dataSort","dataFormat","cell","undefined","hidden","isKey","CardFooter","Button","size","payload","axios","localStorage","getItem","process","toast","theme","saveAudienceDataHandle"],"sourceRoot":""}