{"version":3,"file":"static/js/5839.6e5607c0.chunk.js","mappings":"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","sources":["hoc/pagination.js","views/settings/Staff/staffdetails/staffList.js"],"sourcesContent":["import React, { Component, useEffect, useState } from 'react'\nimport Pagination from \"rc-pagination\";\nimport \"rc-pagination/assets/index.css\";\nimport localeInfo from \"rc-pagination/lib/locale/en_US\";\n \nexport default function TablePagination(props) {\n  const [data,setData] = useState({ totalDocs:props.totalPages,currentPage:props.currentPage})\n  const  onPaginationChange=(data)=>{\n    props.callbackfunc(data);\n  }\n  const  onShowSizeChange=(data)=>{\n    console.log(\"onShowSizeChange\",data)\n  }\n  return (\n    <>\n    <Pagination\n     showTotal={(total, range) =>\n      `${range[0]} - ${range[1]} of ${total} items`\n      }\n       showQuickJumper\n    pageSizeOptions={['10', '20', '50', '100']}\n    showSizeChanger\n    defaultPageSize={props.defaultPageSize}\n    defaultCurrent={data.currentPage}\n    onShowSizeChange={ onShowSizeChange}\n    onChange={onPaginationChange}\n    total={data.totalDocs}\n    locale={localeInfo}\n  />\n</>\n  )\n}\n","import React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { Col, Card, CardBody, CardFooter, Row, Button ,Spinner} from \"reactstrap\";\nimport { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\nimport axios from 'axios';\nimport TablePagination from '../../../../hoc/pagination';\nimport Swal from 'sweetalert2';\nconst StaffList = () => {\n  const usersInitialData = { allusersList: [], totalPages: \"\", currentPage: \"\", loader: false ,\n  permissions:{canCreate: true, canView: true, canUpdate: true, canDelete: true}}\n  const [initialData, setState] = useState(usersInitialData);\n  const { allusersList, totalPages, currentPage, loader,permissions } = initialData\n  let history = useNavigate();\n  const tableList = (page) => {\n    setState((prevState) => ({ ...prevState, loader: true }))\n    axios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem(\"token\");\n    axios.get(`${process.env.REACT_APP_BASE_URL_BASE}users/pagination?page=${page - 1}&size=10&sort=id,desc`).then((res) => {\n       console.log(\"res\",res)\n      setState((prevState) => ({\n        ...prevState,\n        allusersList: res.data.content,\n        totalPages: res.data.totalElements,\n        currentPage: res.data.pageNumber + 1,\n        loader: false\n      }))\n      if (res.status == 401) {\n        Swal.fire({ title: \"error\", icon: \"error\", text: \"Session Expired\" });\n        navigate('/login');\n      }\n    }).catch(err => {\n      Swal.fire( err.response.data.message, 'Please try again '  ) \n      setState((prevState) => ({ ...prevState, loader: false, studentList: [], }))\n    })\n  }\n  useEffect(() => {\n    let userid=localStorage.getItem(\"userid\");\n    axios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem(\"token\");\n    axios.get(`${process.env.REACT_APP_BASE_URL_BASE}auth/users/${userid}`)\n      .then((res) => {\n         let permission = res.data.roles?res.data.roles[0][\"users\"]:null;\n        setState((prevState) => ({\n          ...prevState, \n          permissions:permission\n        }))\n      }).catch((err) => {      })\n    tableList(\"1\");\n  }, []);\n  const onPaginationChange = (page) => {\n    tableList(page);\n  }\n \n  const staffActionsHandle = (id) => {\n    return (\n      <span>\n       {permissions.canUpdate?   <Link id={id} to={`/staff/createstaff/${id}`}>\n          <i className=\"fa fa-pencil\" id=\"pencilspace\" aria-hidden=\"true\"  ></i>\n        </Link>:null}\n      </span>\n    )\n  }\n  const indexFormat = (cell, row, enumObject, index) => {\n    return (<>{index + 1}</>);\n  }\n  const userTypeFetch = (cell, row) => {\n     return (<>{row.roles?row.roles[0].roleName:null}</>);\n  }\n  const employmentTypeFetch = (cell, row) => {\n    return (<>{row.employmentType?row.employmentType.name:null}</>);\n  }\n  const displayFullName = (cell, row) => {\n    return (<span>{row ? `${row.firstName} ${row.lastName}` : null}</span>);\n  }\n  return (\n    <>\n     {loader?<Spinner\n      className='loaderr'\n       color=\"primary\"\n      > \n      Loading...\n    </Spinner>:null} \n      \n        <CardBody className='cardbg'>\n          <Row>\n            <Col ><h4><strong>Users List </strong></h4></Col>\n            <Col>\n            {permissions.canCreate?   <Button outline color=\"info\" size=\"sm\" className='buttonfloat' onClick={() => history(\"/staff/createstaff/new\")}>Add User </Button>:null}\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Card >\n                <BootstrapTable data={allusersList} keyField=\"sno\" search striped hover multiColumnSearch={true} version='4'>\n                  <TableHeaderColumn width=\"00\" dataAlign='left' dataField='sno' dataFormat={indexFormat} dataSort>S No</TableHeaderColumn>\n                  <TableHeaderColumn width=\"160\" dataAlign='left' dataField='name' dataFormat={displayFullName} >Name</TableHeaderColumn>\n                 <TableHeaderColumn width=\"160\" dataAlign='left' dataField='email' dataSort>Email</TableHeaderColumn>\n                 <TableHeaderColumn width=\"100\" dataAlign='left' dataField='phone' >Phone</TableHeaderColumn>\n                  <TableHeaderColumn width=\"100\" dataAlign='left' dataField='user' dataSort dataFormat={userTypeFetch}>User Type</TableHeaderColumn>\n                  <TableHeaderColumn width=\"100\" dataAlign='left' dataField='employment' dataSort dataFormat={employmentTypeFetch}>Employment Type</TableHeaderColumn>\n                  <TableHeaderColumn width=\"80\" dataAlign='left' dataField='pin' dataSort  >Pin</TableHeaderColumn>\n                  <TableHeaderColumn width=\"80\" dataAlign='left' dataField=\"id\" dataFormat={(id) => staffActionsHandle(id)} >Action</TableHeaderColumn>\n                </BootstrapTable>\n                <CardFooter>\n                  {allusersList.length >= 1 ? <TablePagination totalPages={totalPages} currentPage={currentPage} callbackfunc={onPaginationChange} defaultPageSize={\"10\"}></TablePagination> : null}\n                </CardFooter>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n          </Row>\n        </CardBody>\n       \n    </>\n  )\n}\nexport default StaffList;\n"],"names":["TablePagination","props","_useState","useState","totalDocs","totalPages","currentPage","_useState2","_slicedToArray","data","_jsx","_Fragment","children","Pagination","showTotal","total","range","concat","showQuickJumper","pageSizeOptions","showSizeChanger","defaultPageSize","defaultCurrent","onShowSizeChange","console","log","onChange","callbackfunc","locale","localeInfo","allusersList","loader","permissions","canCreate","canView","canUpdate","canDelete","initialData","setState","history","useNavigate","tableList","page","prevState","_objectSpread","axios","localStorage","getItem","process","then","res","content","totalElements","pageNumber","status","Swal","title","icon","text","navigate","catch","err","response","message","studentList","useEffect","userid","permission","roles","_jsxs","Spinner","className","color","CardBody","Row","Col","Button","outline","size","onClick","Card","BootstrapTable","keyField","search","striped","hover","multiColumnSearch","version","TableHeaderColumn","width","dataAlign","dataField","dataFormat","cell","row","enumObject","index","dataSort","firstName","lastName","roleName","employmentType","name","id","Link","to","staffActionsHandle","CardFooter","length"],"sourceRoot":""}