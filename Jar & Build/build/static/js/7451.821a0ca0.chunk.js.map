{"version":3,"file":"static/js/7451.821a0ca0.chunk.js","mappings":"+WAQMA,EAA0B,CAACC,gBAAgB,GAAGC,WAAW,GAAGC,YAAY,GAAGC,QAAO,EAAMC,UAAU,GAAGC,QAAQ,GAAGC,eAAe,WACtH,SAASC,IACtB,IAAAC,GAAgCC,EAAAA,EAAAA,UAASV,GAAyBW,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3DI,EAAWF,EAAA,GAAEG,EAAQH,EAAA,GACrBV,EAAmFY,EAAnFZ,gBAAuCG,GAA4CS,EAAnEX,WAAmEW,EAAxDV,YAAwDU,EAA5CT,QAAOC,EAAqCQ,EAArCR,UAAUC,EAA2BO,EAA3BP,QAAQC,EAAmBM,EAAnBN,eACjEQ,GAAWC,EAAAA,EAAAA,MACXC,EAAiB,SAACC,EAAKC,GACjB,cAAPD,GACDJ,GAAS,SAACM,GAAS,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACdD,GAAS,IACZf,UAAUc,GAAI,IAGR,YAAPD,GACDJ,GAAS,SAACM,GAAS,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACdD,GAAS,IACZd,QAAQa,GAAI,GAGlB,EA2CMG,EAAoB,SAACC,GACzB,OAAOC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SAAGC,WAAWJ,GAAKK,QAAQ,IACpC,EAIMC,EAAc,SAACC,EAAMC,GACzB,OAAgB,OAATD,QAA0BE,IAATF,EAAqBG,IAAOH,EAAM,CAAC,UAAUI,OAAO,WAAa,EAC3F,EAgBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAIC,EAAW,IAAIC,KACfC,EAAWL,IAAOG,GAAUF,OAAO,cACjCK,EAASN,IAAOG,GAAUF,OAAO,cACrCM,EAAAA,EAAAA,IAAU,6BAADC,OAA8BH,EAAQ,KAAAG,OAAIF,IAAUG,MAAK,SAACC,GACjE7B,GAAS,SAACM,GAAS,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACdD,GAAS,IACZf,UAAU+B,EAAW9B,QAAQ8B,EAC7BnC,gBAAgB0C,EAAIC,KAAKxC,QAAO,EAAMG,eAAe,SAAO,GAEhE,IAAGsC,OAAM,SAAAC,GACPC,IAAAA,KAAWD,EAAIE,SAASJ,KAAKK,QAAS,qBACtCnC,GAAS,SAACM,GAAS,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQD,GAAS,IAAChB,QAAO,GAAK,GACnD,GACJ,GAAE,KAEA8C,EAAAA,EAAAA,MAAAzB,EAAAA,SAAA,CAAAC,SAAA,CACEtB,GAAOoB,EAAAA,EAAAA,KAAC2B,EAAAA,GAAO,CACfC,UAAU,UACTC,MAAM,UAAS3B,SACf,eAEU,MACXwB,EAAAA,EAAAA,MAACI,EAAAA,GAAQ,CAACF,UAAU,SAAQ1B,SAAA,EACxBF,EAAAA,EAAAA,KAAA,MAAAE,UAAIF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,6BACPF,EAAAA,EAAAA,KAAA,OAAK4B,UAAU,cACjBF,EAAAA,EAAAA,MAACK,EAAAA,GAAG,CAAA7B,SAAA,EACFwB,EAAAA,EAAAA,MAACM,EAAAA,GAAG,CAACC,GAAI,EAAE/B,SAAA,EACXF,EAAAA,EAAAA,KAACkC,EAAAA,GAAK,CAAAhC,SAAC,gBACLF,EAAAA,EAAAA,KAACmC,IAAU,CACTzC,KAAK,YACL0C,SAAUvD,EAAU,IAAIgC,KAAKhC,GAAW,KACxCwD,SAAU,SAAC1C,GAAI,OAAKF,EAAiB,YAAYE,EAAK,EACtD2C,gBAAgB,mBAGpBZ,EAAAA,EAAAA,MAACM,EAAAA,GAAG,CAACC,GAAI,EAAE/B,SAAA,EACTF,EAAAA,EAAAA,KAACkC,EAAAA,GAAK,CAAAhC,SAAC,cACPF,EAAAA,EAAAA,KAACmC,IAAU,CACTC,SAAUtD,EACVuD,SAAU,SAAC1C,GAAI,OAAKF,EAAiB,UAAUE,EAAK,EACpD2C,gBAAgB,aAChBC,QAAS1D,QAGbmB,EAAAA,EAAAA,KAACgC,EAAAA,GAAG,CAACC,GAAI,EAAGO,MAAO,CAACC,UAAU,QAAQvC,UACpCF,EAAAA,EAAAA,KAAC0C,EAAAA,GAAM,CAACC,KAAK,SAASC,QAAS,YAzET,WAC9B,GAAe,KAAZ/D,GAA8B,KAAZC,EAAe,CAClCQ,GAAS,SAACM,GAAS,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQD,GAAS,IAAChB,QAAO,GAAI,IAChD,IAAIkC,EAAWL,IAAO5B,GAAW6B,OAAO,cACpCK,EAASN,IAAO3B,GAAS4B,OAAO,cACpCM,EAAAA,EAAAA,IAAU,6BAADC,OAA8BH,EAAQ,KAAAG,OAAIF,IAAUG,MAAK,SAACC,GACjE7B,GAAS,SAACM,GAAS,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACdD,GAAS,IACZnB,gBAAgB0C,EAAIC,KAAKxC,QAAO,EAAMG,eAAe,SAAO,GAEhE,IAAGsC,OAAM,SAAAC,GACPC,IAAAA,KAAWD,EAAIE,SAASJ,KAAKK,QAAS,qBACtCnC,GAAS,SAACM,GAAS,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQD,GAAS,IAAChB,QAAO,GAAK,GACnD,GACF,MACE2C,IAAAA,KAAU,oBAEd,CAwD8CsB,EAA2B,EAAE3C,SAAC,aAEpEF,EAAAA,EAAAA,KAACgC,EAAAA,GAAG,CAACC,GAAI,EAAGO,MAAO,CAACC,UAAU,QAAQvC,UACpCF,EAAAA,EAAAA,KAAC0C,EAAAA,GAAM,CAACC,KAAK,SAASC,QAAS,YApGP,WAChC,GAAe,KAAZ/D,GAA8B,KAAZC,EAAe,CAClCQ,GAAS,SAACM,GAAS,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQD,GAAS,IAAChB,QAAO,GAAI,IAChD,IAAIkC,EAAWL,IAAO5B,GAAW6B,OAAO,cACpCK,EAASN,IAAO3B,GAAS4B,OAAO,cACpCM,EAAAA,EAAAA,IAAU,qBAADC,OAAsBH,EAAQ,KAAAG,OAAIF,IAAUG,MAAK,SAACC,GAC1D7B,GAAS,SAACM,GAAS,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACbD,GAAS,IACZnB,gBAAgB0C,EAAIC,KAAKxC,QAAO,EAAMG,eAAe,WAAS,GAElE,IAAGsC,OAAM,SAAAC,GACPC,IAAAA,KAAWD,EAAIE,SAASJ,KAAKK,QAAS,qBACtCnC,GAAS,SAACM,GAAS,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQD,GAAS,IAAChB,QAAO,GAAK,GACnD,GACF,MACE2C,IAAAA,KAAU,CACRuB,SAAU,SACVC,KAAM,UACNC,MAAO,yBACPC,mBAAmB,EACnBC,MAAO,MAGb,CA6E8CC,EAA6B,EAAEjD,SAAC,eAEtEF,EAAAA,EAAAA,KAACgC,EAAAA,GAAG,CAACC,GAAI,EAAGO,MAAO,CAACC,UAAU,QAAQvC,UACpCF,EAAAA,EAAAA,KAAC0C,EAAAA,GAAM,CAACC,KAAK,SAASC,QAAS,kBAAMrD,EAAS,aAAa,EAACW,SAAE,eAGlEF,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAC+B,EAAAA,GAAG,CAAA7B,UACFF,EAAAA,EAAAA,KAACgC,EAAAA,GAAG,CAAA9B,SACe,YAAlBnB,GACC2C,EAAAA,EAAAA,MAAC0B,EAAAA,GAAc,CAAChC,KAAM3C,EAAiB4E,OAAK,EAACC,mBAAmB,EAAMC,QAAQ,IAAIC,QAAM,EAAAtD,SAAA,EACtFF,EAAAA,EAAAA,KAACyD,EAAAA,GAAiB,CAACC,MAAM,MAAMC,UAAU,OAAQC,UAAQ,EAACC,OAAK,EAAA3D,SAAC,UAChEF,EAAAA,EAAAA,KAACyD,EAAAA,GAAiB,CAACC,MAAM,MAAMC,UAAU,OAAOG,WAnExC,SAACnE,GACnB,OAAOK,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SAAGO,IAAOd,GAAMe,OAAO,eAChC,EAiEqFkD,UAAQ,EAAA1D,SAAC,UAClFF,EAAAA,EAAAA,KAACyD,EAAAA,GAAiB,CAACC,MAAM,MAAMC,UAAU,cAAcG,WAAYzD,EAAauD,UAAQ,EAAA1D,SAAC,mBACzFF,EAAAA,EAAAA,KAACyD,EAAAA,GAAiB,CAACC,MAAM,MAAMC,UAAU,eAAgBG,WAAYzD,EAAeuD,UAAQ,EAAA1D,SAAC,oBAC7FF,EAAAA,EAAAA,KAACyD,EAAAA,GAAiB,CAACC,MAAM,MAAMC,UAAU,oBAAoBG,WAAYhE,EAAoB8D,UAAQ,EAAA1D,SAAC,oBAEzGwB,EAAAA,EAAAA,MAAC0B,EAAAA,GAAc,CAAChC,KAAM3C,EAAiB4E,OAAK,EAACC,mBAAmB,EAAMC,QAAQ,IAAIC,QAAM,EAAAtD,SAAA,EACvFF,EAAAA,EAAAA,KAACyD,EAAAA,GAAiB,CAACC,MAAM,KAAKK,UAAU,SAASJ,UAAU,MAC3D3D,EAAAA,EAAAA,KAACyD,EAAAA,GAAiB,CAACC,MAAM,MAAMK,UAAU,OAAOJ,UAAU,OAAQC,UAAQ,EAACC,OAAK,EAAA3D,SAAC,UACjFF,EAAAA,EAAAA,KAACyD,EAAAA,GAAiB,CAACC,MAAM,MAAMK,UAAU,OAAQJ,UAAU,wBAAwBG,WAAYhE,EAAoB8D,UAAQ,EAAA1D,SAAC,4BAOxI,C","sources":["views/dashboard/tables/StaffAttendList.js"],"sourcesContent":["import React,{useState,useEffect}  from 'react'\nimport { Col,Badge, Label,Card ,CardBody, Row, Button,Spinner } from \"reactstrap\";\nimport { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\nimport Axios from \"../../../hoc/axiosConfig\";\nimport Swal from 'sweetalert2';\nimport DatePicker from \"react-datepicker\";\nimport moment from 'moment/moment';\nimport { useNavigate } from \"react-router-dom\";\nconst StudentAttandinitialData= {StaffAttandList:[],totalPages:\"\",currentPage:\"\",loader:false,startDate:'',endDate:\"\",SummaryORhours:\"summary\"}\nexport default function StaffAttendList() {\n  const [studentData, setState] = useState(StudentAttandinitialData);\n  const {StaffAttandList,totalPages,currentPage,loader,startDate,endDate,SummaryORhours} =  studentData;\n  const navigate = useNavigate();\n  const dateHandleChange=(name,date)=>{\n    if(name===\"startDate\"){\n      setState((prevState)=>({\n        ...prevState,\n        startDate:date\n      }))\n    }\n    if(name===\"endDate\"){\n      setState((prevState)=>({\n        ...prevState,\n        endDate:date\n      }))\n    }\n  }\n  const summaryStudentattendGetData=()=>{\n    if(startDate!==\"\" && endDate !== \"\"){\n      setState((prevState)=>({...prevState,loader:true}))\n      let StartDat = moment(startDate).format(\"YYYY-MM-DD\");\n      let endDat = moment(endDate).format(\"YYYY-MM-DD\");\n      Axios.get(`/staff-attendance/${StartDat}/${endDat}`).then((res)=>{\n       setState((prevState)=>({\n          ...prevState,\n          StaffAttandList:res.data,loader:false,SummaryORhours:\"summary\"\n        }))\n      }).catch(err=>{\n        Swal.fire( err.response.data.message, 'Please try again '  ) \n        setState((prevState)=>({...prevState,loader:false}))\n      })\n    }else{\n      Swal.fire({\n        position: 'center',\n        icon: 'warning',\n        title: 'Please Enter Some Date',\n        showConfirmButton: false,\n        timer: 1500\n      })\n    }\n  }\n  const hoursStudentattendGetData=()=>{\n    if(startDate!==\"\" && endDate !== \"\"){\n      setState((prevState)=>({...prevState,loader:true}))\n      let StartDat = moment(startDate).format(\"YYYY-MM-DD\");\n      let endDat = moment(endDate).format(\"YYYY-MM-DD\");\n      Axios.get(`/staff-attendance/summary/${StartDat}/${endDat}`).then((res)=>{\n        setState((prevState)=>({\n          ...prevState,\n          StaffAttandList:res.data,loader:false,SummaryORhours:\"hours\"\n        }))\n      }).catch(err=>{\n        Swal.fire( err.response.data.message, 'Please try again '  ) \n        setState((prevState)=>({...prevState,loader:false}))\n      })\n    }else{\n      Swal.fire(\"Field is required\")\n    }\n  }\n  const displayhoursHandle =(num)=>{\n    return(<>{parseFloat(num).toFixed(2)}</>)\n  }\n  const displayDate = (date)=>{\n    return(<>{moment(date).format(\"MM/DD/YYYY\")}</>)\n  }\n  const timeDisplay = (cell, row) => {\n    return cell !== null && cell !== undefined ? moment(cell, [\"HH:mm\"]).format(\"hh:mm a\") : \"\";\n  }\n  useEffect(()=>{\n    var someDate = new Date();\n    let StartDat = moment(someDate).format(\"YYYY-MM-DD\");\n      let endDat = moment(someDate).format(\"YYYY-MM-DD\");\n      Axios.get(`/staff-attendance/summary/${StartDat}/${endDat}`).then((res)=>{\n        setState((prevState)=>({\n          ...prevState,\n          startDate:someDate,  endDate:someDate,\n          StaffAttandList:res.data,loader:false,SummaryORhours:\"hours\"\n        }))\n      }).catch(err=>{\n        Swal.fire( err.response.data.message, 'Please try again '  ) \n        setState((prevState)=>({...prevState,loader:false}))\n      })\n  },[])\n  return (\n    <>\n     {loader?<Spinner\n      className='loaderr'\n       color=\"primary\"\n      > \n      Loading...\n      </Spinner>:null}\n      <CardBody className='cardbg'>          \n          <h4><b>Staff Attendance List</b></h4>\n          <div className='height15'></div>\n        <Row>\n          <Col md={3}>\n          <Label>Start Date</Label>\n            <DatePicker\n              name=\"startDate\"\n              selected={startDate?new Date(startDate):null}\n              onChange={(date) => dateHandleChange(\"startDate\",date)}\n              placeholderText=\"mm/dd/yyyy\"\n            />\n          </Col>\n          <Col md={3}>\n            <Label>End Date</Label>\n            <DatePicker\n              selected={endDate}\n              onChange={(date) => dateHandleChange(\"endDate\",date)}\n              placeholderText=\"mm/dd/yyyy\"\n              minDate={startDate} \n            />\n          </Col>\n          <Col md={1} style={{marginTop:\"30px\"}}> \n            <Button type=\"button\" onClick={()=>{hoursStudentattendGetData()}}>Hours</Button>\n          </Col>\n          <Col md={2} style={{marginTop:\"30px\"}}> \n            <Button type=\"button\" onClick={()=>{summaryStudentattendGetData()}}>Summary</Button>\n          </Col>\n          <Col md={1} style={{marginTop:\"30px\"}}>\n            <Button type=\"button\" onClick={() => navigate(\"/dashboard\")} >Back</Button>\n          </Col>\n        </Row>\n        <hr/>\n        <Row>  \n          <Col>\n          {SummaryORhours ===\"summary\"? \n            <BootstrapTable data={StaffAttandList} hover multiColumnSearch={true} version='4' search>\n              <TableHeaderColumn width=\"160\" dataField='name'  dataSort isKey>Name</TableHeaderColumn>\n              <TableHeaderColumn width=\"130\" dataField='date' dataFormat={displayDate} dataSort>Date</TableHeaderColumn>\n              <TableHeaderColumn width=\"100\" dataField='checkInTime' dataFormat={timeDisplay} dataSort>Check In Time</TableHeaderColumn>\n              <TableHeaderColumn width=\"100\" dataField='checkOutTime'  dataFormat={timeDisplay}   dataSort>Check Out Time</TableHeaderColumn>\n              <TableHeaderColumn width=\"120\" dataField='totalWorkingHours' dataFormat={displayhoursHandle} dataSort>Total Hours</TableHeaderColumn>\n            </BootstrapTable>\n          :<BootstrapTable data={StaffAttandList} hover multiColumnSearch={true} version='4' search>\n            <TableHeaderColumn width=\"50\" dataAlign='center' dataField=''></TableHeaderColumn>\n            <TableHeaderColumn width=\"100\" dataAlign='left' dataField='name'  dataSort isKey>Name</TableHeaderColumn>\n            <TableHeaderColumn width=\"100\" dataAlign='left'  dataField='totalHoursInDateRange' dataFormat={displayhoursHandle} dataSort>Total Hours</TableHeaderColumn>\n          </BootstrapTable>}\n          </Col>\n        </Row>\n      </CardBody> \n    </>\n  )\n}\n"],"names":["StudentAttandinitialData","StaffAttandList","totalPages","currentPage","loader","startDate","endDate","SummaryORhours","StaffAttendList","_useState","useState","_useState2","_slicedToArray","studentData","setState","navigate","useNavigate","dateHandleChange","name","date","prevState","_objectSpread","displayhoursHandle","num","_jsx","_Fragment","children","parseFloat","toFixed","timeDisplay","cell","row","undefined","moment","format","useEffect","someDate","Date","StartDat","endDat","Axios","concat","then","res","data","catch","err","Swal","response","message","_jsxs","Spinner","className","color","CardBody","Row","Col","md","Label","DatePicker","selected","onChange","placeholderText","minDate","style","marginTop","Button","type","onClick","hoursStudentattendGetData","position","icon","title","showConfirmButton","timer","summaryStudentattendGetData","BootstrapTable","hover","multiColumnSearch","version","search","TableHeaderColumn","width","dataField","dataSort","isKey","dataFormat","dataAlign"],"sourceRoot":""}