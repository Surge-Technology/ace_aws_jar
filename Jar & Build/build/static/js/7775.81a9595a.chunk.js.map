{"version":3,"file":"static/js/7775.81a9595a.chunk.js","mappings":"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","sources":["views/settings/Staff/staffattendence/createStaffAttendence.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Col, Label, Card, CardBody, Row, Input, FormGroup, Button, Media, InputGroup, InputGroupText } from \"reactstrap\";\nimport { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\nimport { Formik, Form } from 'formik';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport axios from 'axios';\nimport moment from 'moment/moment';\nimport Swal from 'sweetalert2';\nimport DatePicker from \"react-datepicker\";\nimport { useNavigate } from \"react-router-dom\";\nimport './style.css'\nimport Select from 'react-select'; \nconst createStaffAttendence = () => {\n  const [state, setState] = useState({ checkIn: new Date(), checkOut: new Date() });\n  const [startDate, setStartDate] = useState(new Date());\n  const [staff, setStaff] = useState({});\n  const [inCheck, setInCheck] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [defaultData, setDefaultData] = useState(\"\");\n  const [pin, setPin] = useState(\"\");\n  const [attendenceId, setAttendenceId] = useState(\"\");\n  const [staffAttendenceList, setStaffAttendenceList] = useState([]);\n  const [allUsers, setAllUsers] = useState([]);\n  const [selectedStaffId, setSelectedStaffId] = useState(\"\")\n  const navigate = useNavigate();\n  useEffect(() => {\n    handleOnSearch();\n  }, []);\n  const setDateIn = (date, values) => {\n    values.checkIn = date;\n    setState({ ...values });\n  }\n  const setDateOut = (date, values) => {\n    values.checkOut = date;\n    setState({ ...values });\n  }\n  const initialValues = {\n    startDate: startDate,\n    name: name,\n    checkIn: state.checkIn,\n    checkOut: state.checkOut,\n    pin: pin\n  }\n  const handleOnSearch = (string, results) => {\n    // onSearch will have as the first callback parameter\n    // the string searched and for the second the results.\n     if (string !== \"\") {\n      axios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem(\"token\");\n      axios.get(`${process.env.REACT_APP_BASE_URL_BASE}/auth/staff`).then((res) => {\n        let allusers = []\n        res.data.map((data, index) => {\n           allusers.push({ value: data.id, label: `${data.firstName} ${data.lastName}` })\n        })\n\n        setAllUsers(allusers );\n      }).catch((err) => {\n        if (err.status === 401) {\n          Swal.fire('401 session expired..!', 'Please re-login');\n        }\n        else {\n          Swal.fire(err.message)\n        }\n      })\n    }\n  }\n  const handleOnHover = (result) => {\n    // the item hovered\n    //console.log(result)\n  }\n  const handleOnSelect = (item) => {\n    // the item selected\n    setStaff(item)\n     setName(item.label);\n     \n    setSelectedStaffId(item.value);\n    sevendaysData(item);\n    todatDateFetch(item);\n  }\n  const sevendaysData = (data) => {\n    axios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem(\"token\");\n     axios.get(`${process.env.REACT_APP_BASE_URL_BASE}staff-api/user/${data.value}/staff-attendances`).then((res) => {\n      console.log(\"setAttendenceId\",res)\n       if (res.status ===200 || res.status===201) {\n        setAttendenceId(res.data[0].id);\n        setStaffAttendenceList(res.data);\n      }\n      else {\n        //console.log(\"hii\")\n      }\n    }).catch((err) => {\n      console.log(err.message)\n      //Swal.fire( 'Please try again ')\n    })\n  }\n  const todatDateFetch = (data) => {\n    axios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem(\"token\");\n     axios.get(`${process.env.REACT_APP_BASE_URL_BASE}staff-api/user/${data.value}/staff-attendance/${moment(state.datee).format('YYYY-MM-DD')}`).then((res) => {\n      console.log(\"today date\", res)\n      if (res.data === \"\") {\n        setInCheck(true);\n        //setResponseData(res.data);\n      }else {\n        setInCheck(false);\n        let d = new Date();\n        let [hours, minutes] = res.data.checkOut.split(':');\n        d.setHours(+hours);\n        d.setMinutes(minutes);\n        setState({ ...state, checkOut: d.toString() });\n      }\n    }).catch((err) => {\n      console.log(err)\n      if (err.status === 401) {\n        Swal.fire('401 session expired..!', 'Please re-login');\n      }\n      // else {\n      //Swal.fire('Oops, something went wrong. Please try again later');\n      // }\n    })\n  }\n  const handleOnFocus = () => {\n    console.log('Focused')\n  }\n  const formatResult = (item) => {\n    return (\n      <div >\n        <span style={{ display: 'block', textAlign: 'left', cursor: \"pointer\" }}>{item.name}</span>\n      </div>\n    )\n  }\n  const refreshPage = () => {\n    setInCheck(false);\n    setName(\"\");\n    setDefaultData(\"\");\n    setPin(\"\");\n    setStaffAttendenceList([]);\n    setPin(\"\");\n    setStaff({});\n  }\n  const attendenceSubmit = (values) => {\n    console.log(values)\n    let payload = {\n      date: moment(values.startDate).format('YYYY-MM-DD'),\n      checkIn: moment(values.checkIn).format(\"HH:mm\"),\n      pin: values.pin\n    }\n    let updatePayload = {\n      checkOut: moment(values.checkOut).format(\"HH:mm\"),\n      pin: values.pin\n    }\n    axios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem(\"token\");\n    if (inCheck == true) {\n      axios.post(`${process.env.REACT_APP_BASE_URL_BASE}staff-api/user/${selectedStaffId}/staff-attendance`, payload).then((res) => {\n        console.log(\"post\", res)\n        if (res.status === 201) {\n          Swal.fire(\n            'Good job!',\n            'Staff In time entered successfully',\n            'success'\n          )\n             //  toast.success(`Staff In time entered successfully `, { theme: \"colored\" });\n          sevendaysData(res.data);\n          todatDateFetch(res.data);\n         // window.location.reload(false)\n          refreshPage();\n        }\n      }).catch((err) => {\n        console.log(err)\n        if (err.status === 401) {\n          Swal.fire('401 session expired..!', 'Please re-login');\n        }\n        else {\n          Swal.fire(err.response.data.message);\n        }\n      })\n    }\n    else {\n      axios.put(`${process.env.REACT_APP_BASE_URL_BASE}staff-api/user/${selectedStaffId}/staff-attendance/${attendenceId}`, updatePayload).then((res) => {\n        console.log(\"update\", res)\n        if (res.status === 200) {\n          Swal.fire(\n            'Good job!',\n            'Staff Out time entered successfully',\n            'success'\n          )\n          // toast.info(`Staff Out time entered successfully`, { theme: \"colored\" });\n        //  window.location.reload(false)\n          refreshPage();\n        }\n      }).catch((err) => {\n        console.log(err.response)\n        if (err.response.status === 401) {\n          Swal.fire('401 session expired..!', 'Please re-login');\n        }\n        // if (err.response.status === 404) {\n        //   Swal.fire(`Staff already checked out at time : ${moment(err.response.data.message, [\"HH:mm\"]).format(\"hh:mm a\")}`);\n        // }\n        else {\n          Swal.fire(err.response.data.message,\"Please try again\");\n        }\n      })\n    }\n  }\n  const dateDisplay = (cell, row) => {\n    return cell !== null && cell !== undefined ? moment(cell).format(\"MM/DD/YYYY\") : \"\";\n  }\n  const timeDisplay = (cell, row) => {\n    return cell !== null && cell !== undefined ? moment(cell, [\"HH:mm\"]).format(\"hh:mm a\") : \"\";\n  }\n  // const filterNames = ({ name }) => {\n  //   return name.toLowerCase().indexOf(searchValue.toLowerCase()) !== -1;\n  // };\n  return (\n    <>\n      <ToastContainer />\n      <Card >\n        <CardBody className='cardbg'>\n          {/* <h4><strong>Staff Attendence <Button type=\"button\" onClick={() => navigate('/attendence')}></Button>\n          </strong></h4> */}\n          {/* <Row>\n                    <Col md={12}>\n                  <Row>\n                    <Col><h4><strong>Start entering your first or last name to locate your Staff information:</strong></h4></Col>\n                  </Row>\n                  <br/>\n                  <Row className='rowborder'>\n                    <Card style={{width:\"83.5em\",marginLeft:\"1em\"}}>\n                      <BootstrapTable data={\"\"} keyField=\"test1\" search striped hover version='4' tableContainerClass='my-custom-class' rowEvents={ rowEvents }>\n                        <TableHeaderColumn  dataAlign='left' dataField='test1'  dataSort >Staff Details</TableHeaderColumn>\n                      </BootstrapTable>\n                    </Card>\n                  </Row>\n                    </Col>\n                    </Row>\n                    <hr /> */}\n          <Card className='attendencecard' >\n            <Formik\n              enableReinitialize=\"true\"\n              initialValues={initialValues}\n              onSubmit={attendenceSubmit}\n            >\n              {({ values, handleChange, handleSubmit, errors, touched, handleBlur, isValid, dirty, setFieldValue }) => (\n                <Form className=\"add-edit-user-form\" onSubmit={handleSubmit}>\n                  <Row>\n                    <Col md={5}>\n                      <FormGroup>\n                        <Label for=\"search\" >Search</Label>\n                            <Select\n                              name=\"staff\"\n                              value={staff || \"Select\"}\n                              onChange={(e)=>{handleOnSelect(e) }}\n                              options={allUsers}\n                            />  \n                      </FormGroup>\n                    </Col>\n                    <Col md={5}>\n                      <FormGroup>\n                        <Label for=\"name\" >Staff Name</Label>\n                        <Input type=\"text\" name=\"name\" value={name} disabled />  \n                      </FormGroup>\n                    </Col>\n                    <Col md={2}></Col>\n                  </Row>\n                  <Row>\n                    <Col md={3}>\n                      <FormGroup>\n                        <Label for=\"startDate\" >Date</Label>\n                        <DatePicker selected={startDate} readOnly className=\"disable\" onChange={(date) => setStartDate(date)} minDate={new Date()} />\n                      </FormGroup>\n                    </Col>\n                    <Col md={3}>\n                      <FormGroup>\n                        <Label for=\"pin\" >Pin</Label>\n                         <Input type=\"number\" name=\"pin\" value={values.pin} onChange={handleChange} />  \n                      </FormGroup>\n                    </Col>\n                    <Col md={6}>\n                      {(inCheck == true) &&\n                        <Row>\n                          <>\n                            <Col md={2}>\n                               <Button className='timeTop' type=\"submit\" >In</Button> \n                            </Col>\n                            \n                          </>\n                          <>\n                            <Col md={2}>\n                                <Button className='timeTop' type=\"submit\"  disabled>Out</Button>\n                            </Col>\n                          </>\n                        </Row>\n                      }\n                      {(inCheck == false) &&\n                        <Row>\n                          <>\n                            <Col md={2}>\n                             <Button className='timeTop' type=\"submit\" disabled>In</Button>\n                            </Col>\n                             \n                          </>\n                          <>\n                            <Col md={2}>\n                                <Button className='timeTop' type=\"submit\" >Out</Button>  \n                            </Col>\n                          </>\n                        </Row>\n                      }\n                    </Col>\n                    \n                  </Row>\n                </Form>\n              )}\n            </Formik>\n          </Card>\n          <hr />\n          <Row  >\n            <Card  >\n              <BootstrapTable data={staffAttendenceList} keyField=\"id\" multiColumnSearch=\"true\">\n                <TableHeaderColumn width=\"5\" dataField='id' hidden >unique field</TableHeaderColumn>\n                {/* <TableHeaderColumn dataField='staff' dataSort dataFormat={staffDisplay}>Staff</TableHeaderColumn> */}\n                <TableHeaderColumn width=\"150\" dataField='date' dataSort dataFormat={dateDisplay}>Date</TableHeaderColumn>\n                {/* <TableHeaderColumn dataField='name' dataSort >Staff Name</TableHeaderColumn>\n                <TableHeaderColumn dataField='phone' dataSort >Phone Number</TableHeaderColumn> */}\n                <TableHeaderColumn width=\"150\" dataField='checkIn' dataFormat={timeDisplay} >Check-In</TableHeaderColumn>\n                <TableHeaderColumn width=\"150\" dataField='checkOut' dataFormat={timeDisplay}>Check-Out</TableHeaderColumn>\n              </BootstrapTable>\n            </Card>\n          </Row>\n          <Row>\n          </Row>\n        </CardBody>\n      </Card>\n    </>\n  )\n}\nexport default createStaffAttendence;"],"names":["_useState","useState","checkIn","Date","checkOut","_useState2","_slicedToArray","state","setState","_useState3","_useState4","startDate","setStartDate","_useState5","_useState6","staff","setStaff","_useState7","_useState8","inCheck","setInCheck","_useState9","_useState10","name","setName","_useState11","_useState12","setDefaultData","_useState13","_useState14","pin","setPin","_useState15","_useState16","attendenceId","setAttendenceId","_useState17","_useState18","staffAttendenceList","setStaffAttendenceList","_useState19","_useState20","allUsers","setAllUsers","_useState21","_useState22","selectedStaffId","setSelectedStaffId","useNavigate","useEffect","handleOnSearch","initialValues","string","results","axios","localStorage","getItem","concat","process","then","res","allusers","data","map","index","push","value","id","label","firstName","lastName","catch","err","status","Swal","message","sevendaysData","console","log","todatDateFetch","moment","datee","format","d","_res$data$checkOut$sp","split","_res$data$checkOut$sp2","hours","minutes","setHours","setMinutes","_objectSpread","toString","refreshPage","timeDisplay","cell","row","undefined","_jsxs","_Fragment","children","_jsx","ToastContainer","Card","CardBody","className","Formik","enableReinitialize","onSubmit","values","payload","date","updatePayload","response","_ref","handleChange","handleSubmit","errors","touched","handleBlur","isValid","dirty","setFieldValue","Form","Row","Col","md","FormGroup","Label","for","Select","onChange","e","item","options","Input","type","disabled","DatePicker","selected","readOnly","minDate","Button","BootstrapTable","keyField","multiColumnSearch","TableHeaderColumn","width","dataField","hidden","dataSort","dataFormat"],"sourceRoot":""}