{"version":3,"file":"static/js/8746.a83d7a7d.chunk.js","mappings":"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","sources":["views/dashboard/tables/TestingEligibilityList.js"],"sourcesContent":["import React,{useEffect, useState}  from 'react'\nimport { Col,  Label,Card,CardBody, Row,Input,Spinner, Button} from \"reactstrap\";\nimport { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\nimport Axios from \"../../../hoc/axiosConfig\";\nimport Swal from 'sweetalert2';\nimport DatePicker from \"react-datepicker\";\nimport moment from 'moment/moment';\nimport { useNavigate } from \"react-router-dom\";\nconst StudentAttandinitialData= {chossenDate:\"\",TestingList:[],totalPages:\"\",currentPage:\"\",loader:false,totalTestingAnticipatedByDate:\"\",totalTestingApprovedByDate:\"\"}\nexport default function TestingEligibilityList() {\n  const [studentData, setState] = useState(StudentAttandinitialData);\n  const {chossenDate,TestingList,totalPages,currentPage,loader,totalTestingAnticipatedByDate,totalTestingApprovedByDate} =  studentData;\n  const navigate = useNavigate();\n  const getDatafromDateChange=(name,date)=>{\n     setState((prevState)=>({...prevState,loader:true}))\n    let chossenDat = moment(date).format(\"YYYY-MM-DD\");\n    Axios.get(`/level-testing/${chossenDat}`).then((res)=>{\n        setState((prevState)=>({\n          ...prevState,\n          TestingList:res.data.levelTestingSummaryList,loader:false,\n          totalTestingAnticipatedByDate:res.data.totalTestingAnticipatedByDate,\n          totalTestingApprovedByDate:res.data.totalTestingApprovedByDate,\n          chossenDate:date\n        }))\n     }).catch(err=>{\n      Swal.fire( err.response.data.message, 'Please try again '  ) \n       setState((prevState)=>({...prevState,loader:false}))\n     })\n  }\n  useEffect(()=>{\n    let dateToday = moment(new Date()).format(\"YYYY-MM-DD\");\n    getDatafromDateChange(\"chossenDate\",dateToday)\n  },[])\n  return (\n    <>\n     {loader?<Spinner\n      className='loaderr'\n       color=\"primary\"\n      > \n      Loading...\n    </Spinner>:null}\n       <Card >\n            <CardBody className='cardbg'>          \n                 <h4><b>Testing Eligibility and Readiness</b></h4>\n                 <div className='height15'></div>\n              <Row>\n                <Col md={3}>\n                  <Label>Choose a level Testing Date :</Label>\n                   <DatePicker\n                    name=\"chossenDate\"\n                    selected={chossenDate?new Date(chossenDate):null}\n                    onChange={(date) => getDatafromDateChange(\"chossenDate\",date)}\n                    placeholderText=\"mm/dd/yyyy\"\n                  />\n                </Col>\n                <Col md={3}>\n                <Label>Total Anticipated</Label>\n                  <Input type=\"text\" value={totalTestingAnticipatedByDate} disabled/>\n                </Col>\n                \n                <Col md={3}>\n                  <Label>Total Approved</Label>\n                  <Input  type=\"text\" value={totalTestingApprovedByDate} disabled />  \n                </Col>\n                <Col md={2} style={{marginTop:\"30px\"}}>\n                  <Button type=\"button\" onClick={() => navigate(\"/dashboard\")} >Back</Button>\n                </Col>\n              </Row>\n              <hr/>\n              <Row>\n                <Col> \n                <BootstrapTable data={TestingList}  hover multiColumnSearch={true} version='4' search>\n                  <TableHeaderColumn width=\"140\" dataField='name'  dataSort isKey>Name</TableHeaderColumn>\n                  <TableHeaderColumn width=\"180\" dataField='level' dataSort>Level</TableHeaderColumn> \n                  <TableHeaderColumn width=\"140\" dataField='testingAnticipated' dataSort> Testing Anticipated</TableHeaderColumn> \n                  <TableHeaderColumn width=\"140\" dataField='testingApproved' dataSort>Testing Approved</TableHeaderColumn> \n                </BootstrapTable>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n    </>\n  )\n}\n"],"names":["StudentAttandinitialData","chossenDate","TestingList","totalPages","currentPage","loader","totalTestingAnticipatedByDate","totalTestingApprovedByDate","TestingEligibilityList","_useState","useState","_useState2","_slicedToArray","studentData","setState","navigate","useNavigate","getDatafromDateChange","name","date","prevState","_objectSpread","chossenDat","moment","format","Axios","concat","then","res","data","levelTestingSummaryList","catch","err","Swal","response","message","useEffect","dateToday","Date","_jsxs","_Fragment","children","_jsx","Spinner","className","color","Card","CardBody","Row","Col","md","Label","DatePicker","selected","onChange","placeholderText","Input","type","value","disabled","style","marginTop","Button","onClick","BootstrapTable","hover","multiColumnSearch","version","search","TableHeaderColumn","width","dataField","dataSort","isKey"],"sourceRoot":""}