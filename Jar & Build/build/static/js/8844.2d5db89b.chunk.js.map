{"version":3,"file":"static/js/8844.2d5db89b.chunk.js","mappings":"uYAYOA,EAAO,CAACC,YAAY,GAAGC,aAAa,GAAGC,cAAc,GAAGC,gBAAgB,GAAGC,SAAS,GAAGC,OAAO,eACrGC,UAAU,GAAGC,QAAO,GAgMpB,EA/L4B,WAC1B,IAAAC,GAAmCC,EAAAA,EAAAA,UAASV,GAAOW,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5CI,EAAgBF,EAAA,GAACG,EAAQH,EAAA,GAChCI,GAAwCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA7CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAClBd,GAA8EW,EAA1FZ,YAA0FY,EAA9EX,cAAaC,EAAiEU,EAAjEV,cAA+BE,GAAkCQ,EAAlDT,gBAAkDS,EAAlCR,UAASC,EAAyBO,EAAzBP,OAAOC,EAAkBM,EAAlBN,UAAUC,EAAQK,EAARL,OAClFW,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,MAgETC,EAAkB,SAACC,EAAKC,GAC1BX,GAAS,SAACY,GAAS,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACdD,GAAS,IAAAE,EAAAA,EAAAA,GAAA,GACXJ,EAAMC,EAAEI,OAAOC,OAAK,GAE3B,EAoCA,OA7BAC,EAAAA,EAAAA,YAAU,WACS,QAAdV,EAAOW,IACRC,EAAAA,EAAAA,IAAU,gBAADC,OAAiBb,EAAOW,KAAMG,MAAK,SAACC,GAC3CtB,GAAS,SAACY,GAAS,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACfD,GAAS,IACZzB,YAAYmC,EAAIC,KAAKb,KACrBtB,aAAa,CAAE4B,MAAOM,EAAIC,KAAKC,MAAMN,GAAIO,MAAMH,EAAIC,KAAKC,MAAMd,MAC9DjB,UAAU6B,EAAIC,KAAKG,gBACnBnC,SAAS+B,EAAIC,KAAKI,cAAY,IAEhCvB,EAAgBwB,4DAA8DN,EAAIC,KAAKG,gBACtF,IAAGG,OAAM,SAAAC,GACTC,IAAAA,KAAWD,EAAIE,SAAST,KAAKU,QAAS,oBACxC,IAEFd,EAAAA,EAAAA,IAAU,SAASE,MAAK,SAACC,GACvB,IAAKY,EAAS,GACdZ,EAAIC,KAAKY,KAAI,SAACC,EAAQC,GACpBH,EAAOI,KAAM,CAAEtB,MAAOoB,EAAQlB,GAAIO,MAAOW,EAAQ1B,MAChD,IACHV,GAAS,SAACY,GAAS,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACfD,GAAS,IACZvB,cAAc6C,GAAM,GAExB,IAAGL,OAAM,SAAAC,GACRC,IAAAA,KAAWD,EAAIE,SAAST,KAAKU,QAAS,oBACvC,GACD,GAAG,KAGDM,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CAAE,IAAE/C,GAAOgD,EAAAA,EAAAA,KAACC,EAAAA,GAAO,CACjBC,UAAU,UACTC,MAAM,UAASJ,SACf,eAEQ,MACVC,EAAAA,EAAAA,KAACI,EAAAA,GAAc,KACfJ,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACH,UAAU,QAAOH,UAClBC,EAAAA,EAAAA,KAACM,EAAAA,GAAQ,CAACJ,UAAU,SAAQH,UAC1BC,EAAAA,EAAAA,KAACO,EAAAA,GAAM,CACLC,oBAAoB,EACrBC,cAAepD,EACdqD,iBA1Ea,WAAH,OAASC,EAAAA,SAAaC,MAAM,CAChDnE,YAAakE,EAAAA,SAAaE,SAAS,4BACnCnE,aAAciE,EAAAA,SAAaE,SAAS,sBACnChE,SAAU8D,EAAAA,SAAaE,SAAS,qBAChC,EAuEQC,SArHgB,SAAC7C,GAI1B,GAHe,KAAZlB,GACDsC,IAAAA,KAAU,kCAEK,QAAdxB,EAAOW,GAAa,CACrB,IAAIuC,EAAU,CACZ,KAAQ9C,EAAExB,YACV,gBAAmBwB,EAAElB,UACrB,aAAgBkB,EAAEpB,UAEpBmE,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cAAiD,UAAYC,aAAaC,QAAQ,SAClFF,EAAAA,EAAAA,IAAU,GAADtC,OAAIQ,qCAAmC,cAAAR,OAAahC,EAAa4B,MAAK,iBAAAI,OAAgBb,EAAOW,IAAMuC,GAASpC,MAAK,SAACC,GACpHuC,EAAAA,GAAAA,KAAW,uBAAwB,CAAEC,MAAO,YAC5CC,YAAW,WACV1D,EAAS,kBACX,GAAG,IACP,IAAGwB,OAAM,SAACC,GACNC,IAAAA,KAAUD,EAAIE,SAAST,KAAKU,QAAS,yBACzC,GACJ,KAAK,CACHjC,GAAS,SAACY,GAAS,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQD,GAAS,IAAClB,QAAO,GAAI,IAChD,IAAI+D,EAAU,CACZ,KAAQ9C,EAAExB,YACV,gBAAmBwB,EAAElB,UACrB,aAAgBkB,EAAEpB,UAEpBmE,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cAAkD,UAAYC,aAAaC,QAAQ,SACnFF,EAAAA,EAAAA,KAAW,GAADtC,OAAIQ,wCAA8B,WAAAR,OAAUhC,EAAa4B,MAAK,gBAAeyC,GAASpC,MAAK,SAACC,GACnGuC,EAAAA,GAAAA,QAAc,0BAA2B,CAAEC,MAAO,YAClD9D,GAAS,SAACY,GAAS,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQD,GAAS,IAAClB,QAAO,GAAK,IAChDqE,YAAW,WACT1D,EAAS,kBACX,GAAG,IACP,IAAGwB,OAAM,SAAAC,GACP9B,GAAS,SAACY,GAAS,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQD,GAAS,IAAClB,QAAO,GAAK,IACjDqC,IAAAA,KACQD,EAAIE,SAAST,KAAKU,QACjB,oBAEX,GACF,CACF,EA4EyCQ,SAE9B,SAAAuB,GAAA,IAAGC,EAAMD,EAANC,OAAOC,EAAaF,EAAbE,cAA2BC,GAADH,EAAZI,aAAyBJ,EAAZG,cAAuBH,EAAVK,WAAiBL,EAANM,OAAcN,EAAPO,QAAO,OAC1E7B,EAAAA,EAAAA,KAAC8B,EAAAA,GAAI,CAAChB,SAAUW,EAAa1B,UAC3BF,EAAAA,EAAAA,MAACQ,EAAAA,GAAI,CAACH,UAAU,UAASH,SAAA,EACvBF,EAAAA,EAAAA,MAACkC,EAAAA,GAAU,CAAAhC,SAAA,CAAC,KAACC,EAAAA,EAAAA,KAAA,MAAAD,UAAIC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,oBAA2B,QAClDF,EAAAA,EAAAA,MAACS,EAAAA,GAAQ,CAAAP,SAAA,EACPC,EAAAA,EAAAA,KAACgC,EAAAA,GAAG,CAAAjC,UACFF,EAAAA,EAAAA,MAACoC,EAAAA,GAAG,CAACC,GAAI,GAAGnC,SAAA,EACZC,EAAAA,EAAAA,KAACmC,EAAAA,GAAK,CAACC,IAAI,cAAarC,SAAC,oBACvBC,EAAAA,EAAAA,KAACqC,EAAAA,GAAK,CAACrE,KAAK,cAAcsE,KAAK,OAAOhE,MAAOiD,EAAO9E,YAAa8F,SAAU,SAACtE,GAAC,OAAIF,EAAkB,cAAcE,EAAE,KACnH+B,EAAAA,EAAAA,KAACwC,EAAAA,GAAY,CAACxE,KAAK,cAAcyE,UAAU,MAAOvC,UAAU,iBAGhEL,EAAAA,EAAAA,MAACmC,EAAAA,GAAG,CAAAjC,SAAA,EACFF,EAAAA,EAAAA,MAACoC,EAAAA,GAAG,CAACC,GAAI,EAAEnC,SAAA,EACTC,EAAAA,EAAAA,KAACmC,EAAAA,GAAK,CAACC,IAAI,aAAYrC,SAAC,YACxBC,EAAAA,EAAAA,KAAC0C,EAAAA,GAAM,CACL1E,KAAK,eACLM,MAAO5B,EACP6F,SAAU,SAACtE,GAAKuD,EAAc,eAAevD,GArEzC,SAACD,EAAKC,GAC/BX,GAAS,SAACY,GAAS,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACfD,GAAS,IAAAE,EAAAA,EAAAA,GAAA,GACXJ,EAAMC,GAAC,GAEd,CAgE0E0E,CAAwB,eAAe1E,EAAE,EACzF2E,QAASjG,KAEXqD,EAAAA,EAAAA,KAACwC,EAAAA,GAAY,CAACxE,KAAK,eAAeyE,UAAU,MAAOvC,UAAU,eAE/DL,EAAAA,EAAAA,MAACoC,EAAAA,GAAG,CAACC,GAAI,EAAEnC,SAAA,EACTC,EAAAA,EAAAA,KAACmC,EAAAA,GAAK,CAACC,IAAI,cAAarC,SAAC,wBACzBC,EAAAA,EAAAA,KAACqC,EAAAA,GAAK,CAACrE,KAAK,kBAAkBsE,KAAK,OAAQO,OAAO,oBAAoBvE,MAAOiD,EAAO3E,gBAAiB2F,SAAU,SAACtE,GAAC,OAjGlH,SAACA,GACrB,IAAI6E,EAAMC,IAAIC,gBAAgB/E,EAAEI,OAAO4E,MAAM,IAC9CvF,EAAgBoF,GACf,IAAII,EAAW,IAAIC,SACpBD,EAASE,OAAO,QAASnF,EAAEI,OAAO4E,MAAM,IACvCjC,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cAAkD,UAAYC,aAAaC,QAAQ,SACpFF,EAAAA,EAAAA,KAAW,GAADtC,OAAIQ,wCAA8B,6BAA4BgE,GAAUvE,MAAK,SAACC,GACnFtB,GAAS,SAACY,GAAS,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACjBD,GAAS,IACZnB,UAAU6B,EAAIC,KAAK9B,WAAS,GAEhC,IAAGoC,OAAM,SAAAC,GACPC,IAAAA,KAAWD,EAAIE,SAAST,KAAKU,QAAS,oBACxC,GACF,CAmF6I8D,CAAiBpF,EAAE,WAG5I+B,EAAAA,EAAAA,KAACgC,EAAAA,GAAG,CAAAjC,UACFF,EAAAA,EAAAA,MAACoC,EAAAA,GAAG,CAACC,GAAI,GAAGnC,SAAA,EACVC,EAAAA,EAAAA,KAACmC,EAAAA,GAAK,CAACC,IAAI,WAAUrC,SAAC,gBACtBC,EAAAA,EAAAA,KAACqC,EAAAA,GAAK,CAAErE,KAAK,WAAYsE,KAAK,WAAWhE,MAAOiD,EAAO1E,SAAU0F,SAAU,SAACtE,GAAC,OAAIF,EAAkB,WAAWE,EAAE,EAAGqF,YAAY,sCAAuCC,KAAK,QAC3KvD,EAAAA,EAAAA,KAACwC,EAAAA,GAAY,CAACxE,KAAK,WAAWyE,UAAU,MAAOvC,UAAU,iBAG7DF,EAAAA,EAAAA,KAACgC,EAAAA,GAAG,CAAAjC,UACFF,EAAAA,EAAAA,MAACoC,EAAAA,GAAG,CAACC,GAAI,EAAEnC,SAAA,EACTC,EAAAA,EAAAA,KAACmC,EAAAA,GAAK,CAACC,IAAI,UAASrC,SAAC,cACnBC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,MAAKH,UAClBC,EAAAA,EAAAA,KAAA,OAAKxB,GAAG,kBAAiBuB,UACvBF,EAAAA,EAAAA,MAAA,OAAKrB,GAAG,qBAAoBuB,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,KAAGE,UAAU,OAAMH,SAAEjD,KACrBkD,EAAAA,EAAAA,KAAA,OAAKwD,IAAmB,IAAd/F,EAAiB,mCAAmCA,EAAcgG,IAAI,iBAChFzD,EAAAA,EAAAA,KAAA,KAAGE,UAAU,WAAUH,SAAElD,oBAOvCgD,EAAAA,EAAAA,MAAC6D,EAAAA,GAAU,CAACxD,UAAU,kBAAiBH,SAAA,EACrCC,EAAAA,EAAAA,KAAC2D,EAAAA,GAAM,CAACrB,KAAK,SAASnC,MAAM,YAAYD,UAAU,QAAQ0D,KAAK,KAAMC,QAAS,WAAKlG,EAAS,kBAAkB,EAAEoC,SAAC,YACjHC,EAAAA,EAAAA,KAAC2D,EAAAA,GAAM,CAACrB,KAAK,SAASnC,MAAM,UAAWyD,KAAK,KAAI7D,SAAG,gBAGpD,UAQrB,C","sources":["views/settings/certification/createCertification.js"],"sourcesContent":["import React,{useState, useEffect } from 'react'\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { Col, Label,Card,CardBody,CardFooter, Row,Input, Button,Spinner, CardHeader } from \"reactstrap\";\nimport { Formik,Form ,  ErrorMessage, } from \"formik\";\nimport * as Yup from 'yup';\nimport Select from 'react-select';\nimport Axios from \"../../../hoc/axiosConfig\";\nimport Swal from 'sweetalert2';\nimport moment from 'moment/moment';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport \"./certification.css\";\n const Fields={programName:\"\",selectAwards:\"\",awardsOptions:[],backgroundImage:\"\",bodyCopy:\"\",stname:\"Student name\",\nimageName:\"\",loader:false}\nconst createCertification = () => {\n  const [createinitalData,setState] =useState(Fields);\n  const [studentImage, setStudentImage] = useState(\"\");\n  const{programName,selectAwards,awardsOptions, backgroundImage,bodyCopy,stname,imageName,loader}=createinitalData;\n  const navigate = useNavigate();\n  const params = useParams();\n \n  const submitCertification =(e)=>{\n    if(imageName===\"\"){\n      Swal.fire(\"Please Select Background Image\");\n    }\n    if(params.id !== \"new\"){\n      let payload = {\n        \"name\": e.programName,\n        \"backgroundPhoto\": e.imageName,\n        \"templateBody\": e.bodyCopy\n      }\n      axios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem(\"token\");\n      axios.put(`${process.env.REACT_APP_BASE_URL_BASE}api/level/${selectAwards.value}/certificate/${params.id}`, payload).then((res) => {\n             toast.info(`Updated successfully`, { theme: \"colored\" });\n             setTimeout(() => {\n              navigate(\"/certifications\");\n            }, 1000);\n        }).catch((err) => {\n            Swal.fire(err.response.data.message, 'Please try again later');\n        })\n    }else{\n      setState((prevState)=>({...prevState,loader:true}));\n      let payload = {\n        \"name\": e.programName,\n        \"backgroundPhoto\": e.imageName,\n        \"templateBody\": e.bodyCopy\n      }\n      axios.defaults.headers.common['Authorization'] =  \"Bearer \" + localStorage.getItem(\"token\");\n      axios.post(`${process.env.REACT_APP_BASE_URL}/level/${selectAwards.value}/certificate`,payload).then((res)=>{\n         toast.success(\"Registered successfully\", { theme: \"colored\" })\n         setState((prevState)=>({...prevState,loader:false}));\n          setTimeout(() => {\n            navigate(\"/certifications\");\n          }, 1000);\n      }).catch(err=>{\n        setState((prevState)=>({...prevState,loader:false}));\n        Swal.fire(\n                err.response.data.message,\n                 'Please try again '\n              )\n      })  \n    }\n  }\n  const ValidationSchema = () => Yup.object().shape({\n    programName: Yup.string().required('Program Name is Required'),\n    selectAwards: Yup.object().required('Awards is Required'),\n     bodyCopy: Yup.string().required('Body is Required'),\n  });\n  const fileHandleChange=(e)=>{\n     let file =URL.createObjectURL(e.target.files[0]);\n    setStudentImage(file);\n     let formdata = new FormData();\n    formdata.append('image', e.target.files[0]);\n     axios.defaults.headers.common['Authorization'] =  \"Bearer \" + localStorage.getItem(\"token\");\n    axios.post(`${process.env.REACT_APP_BASE_URL}/certificate/image/upload`,formdata).then((res)=>{\n         setState((prevState)=>({\n        ...prevState,\n        imageName:res.data.imageName \n      })) \n    }).catch(err=>{\n      Swal.fire( err.response.data.message, 'Please try again '  ) \n    })  \n  }\n  const FieldHandleChange=(name,e)=>{\n      setState((prevState)=>({\n        ...prevState,\n        [name]:e.target.value\n      })) \n  }\n  const selectFieldHandleChange=(name,e)=>{\n       setState((prevState)=>({\n        ...prevState,\n        [name]:e\n      })) \n  } \n  useEffect(() => {\n    if(params.id !== \"new\"){\n      Axios.get(`/certificate/${params.id}`).then((res)=>{\n        setState((prevState)=>({\n         ...prevState,\n         programName:res.data.name,\n         selectAwards:{ value: res.data.level.id, label:res.data.level.name },\n         imageName:res.data.backgroundPhoto,\n         bodyCopy:res.data.templateBody, \n       }))\n       setStudentImage(process.env.REACT_APP_BASE_URL_BASE+\"auth/certificate/image/\"+res.data.backgroundPhoto)\n        }).catch(err=>{\n        Swal.fire( err.response.data.message, 'Please try again '  ) \n      })\n    }\n    Axios.get(`level`).then((res)=>{\n      let  levels = []     \n      res.data.map((mapdata,index)=>{\n        levels.push( { value: mapdata.id, label: mapdata.name })\n         })  \n      setState((prevState)=>({\n       ...prevState,\n       awardsOptions:levels\n     }))\n   }).catch(err=>{\n    Swal.fire( err.response.data.message, 'Please try again '  ) \n   })\n  }, []);\n   \n  return (\n    <> {loader?<Spinner\n      className='loaderr'\n       color=\"primary\"\n      > \n      Loading...\n    </Spinner>:null} \n     <ToastContainer /> \n     <Card className='cardm'>\n          <CardBody className='cardbg' >\n            <Formik\n              enableReinitialize={true}\n             initialValues={createinitalData}\n              validationSchema={ValidationSchema}\n             onSubmit={submitCertification} \n              >           \n            {({ values,setFieldValue,handleChange,handleSubmit,handleBlur,errors,touched }) => (\n              <Form onSubmit={handleSubmit} >\n                <Card className='cardbgw'> \n                  <CardHeader> <h5><strong>Certification</strong></h5> </CardHeader>                          \n                    <CardBody>\n                      <Row>\n                        <Col md={12}>\n                        <Label for=\"programName\"> Program Name </Label>\n                          <Input name=\"programName\" type=\"text\" value={values.programName} onChange={(e)=>(FieldHandleChange(\"programName\",e))}/>\n                          <ErrorMessage name=\"programName\" component=\"div\"  className='errmsg'></ErrorMessage>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col md={5}>\n                          <Label for=\"selectName\">Awards</Label>\n                          <Select\n                            name=\"selectAwards\"\n                            value={selectAwards}\n                            onChange={(e)=>{setFieldValue(\"selectAwards\",e),selectFieldHandleChange(\"selectAwards\",e)}}\n                            options={awardsOptions}\n                            />\n                          <ErrorMessage name=\"selectAwards\" component=\"div\"  className='errmsg'></ErrorMessage>\n                        </Col>\n                        <Col md={7}>\n                          <Label for=\"programName\"> BackGround Image </Label>\n                          <Input name=\"backgroundImage\" type=\"file\"  accept=\".jpg, .jpeg, .png\" value={values.backgroundImage} onChange={(e)=>(fileHandleChange(e))}/>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col md={12}>\n                          <Label for=\"bodyCopy\">Body Copy </Label>\n                          <Input  name=\"bodyCopy\"  type=\"textarea\" value={values.bodyCopy} onChange={(e)=>(FieldHandleChange(\"bodyCopy\",e))} placeholder='content display in certification...'  rows=\"2 \" />  \n                          <ErrorMessage name=\"bodyCopy\" component=\"div\"  className='errmsg'></ErrorMessage>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col md={4}>\n                          <Label for=\"preview\">Preview </Label>\n                            <div className=\"App\">\n                              <div id=\"downloadWrapper\">\n                                <div id=\"certificateWrapper\">\n                                  <p className='name'>{stname}</p> \n                                  <img src={studentImage==\"\"?\"https://i.imgur.com/Toz3PUWh.png\":studentImage} alt=\"Certificate\"  />\n                                  <p className='bodyCopy'>{bodyCopy}</p>\n                                </div>\n                              </div>\n                            </div>\n                        </Col>\n                      </Row>\n                  </CardBody>\n                    <CardFooter className='centerTextalign'>\n                      <Button type=\"button\" color='secondary' className='btnbg' size=\"sm\"  onClick={()=>{navigate(\"/certifications\")}}>Cancel</Button>\n                      <Button type=\"submit\" color='primary'  size=\"sm\"  >Save</Button>\n                    </CardFooter>      \n                </Card>\n              </Form>\n            )}\n            </Formik>\n            </CardBody>\n            </Card>\n\n    </>\n  )\n}\n\nexport default createCertification"],"names":["Fields","programName","selectAwards","awardsOptions","backgroundImage","bodyCopy","stname","imageName","loader","_useState","useState","_useState2","_slicedToArray","createinitalData","setState","_useState3","_useState4","studentImage","setStudentImage","navigate","useNavigate","params","useParams","FieldHandleChange","name","e","prevState","_objectSpread","_defineProperty","target","value","useEffect","id","Axios","concat","then","res","data","level","label","backgroundPhoto","templateBody","process","catch","err","Swal","response","message","levels","map","mapdata","index","push","_jsxs","_Fragment","children","_jsx","Spinner","className","color","ToastContainer","Card","CardBody","Formik","enableReinitialize","initialValues","validationSchema","Yup","shape","required","onSubmit","payload","axios","localStorage","getItem","toast","theme","setTimeout","_ref","values","setFieldValue","handleSubmit","handleChange","handleBlur","errors","touched","Form","CardHeader","Row","Col","md","Label","for","Input","type","onChange","ErrorMessage","component","Select","selectFieldHandleChange","options","accept","file","URL","createObjectURL","files","formdata","FormData","append","fileHandleChange","placeholder","rows","src","alt","CardFooter","Button","size","onClick"],"sourceRoot":""}