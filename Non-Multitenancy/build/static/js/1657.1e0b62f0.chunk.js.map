{"version":3,"file":"static/js/1657.1e0b62f0.chunk.js","mappings":"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","sources":["views/settings/Staff/permissions/permissionsList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { Col, Card, CardBody, CardFooter, Row, Button ,Spinner} from \"reactstrap\";\r\nimport { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\r\nimport axios from 'axios'; \r\nimport Swal from 'sweetalert2';\r\nimport moment from 'moment';\r\nconst PermissionsList = () => {\r\n  const usersInitialData = { permissionsList: [], totalPages: \"\", currentPage: \"\", loader: false ,\r\n  permissions:{canCreate: true, canView: true, canUpdate: true, canDelete: true}}\r\n  const [initialData, setState] = useState(usersInitialData);\r\n  const { permissionsList, totalPages, currentPage, loader,permissions } = initialData\r\n  let history = useNavigate();\r\n  \r\n  useEffect(()=>{\r\n    let userid=localStorage.getItem(\"userid\");\r\n    axios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem(\"token\");\r\n    axios.get(`${process.env.REACT_APP_BASE_URL_BASE}auth/users/${userid}`)\r\n      .then((res) => {\r\n          let permission = res.data.roles?res.data.roles[0][\"permissions\"]:null;\r\n        setState((prevState) => ({\r\n          ...prevState, \r\n           permissions:permission\r\n        }))\r\n      }).catch((err) => { })\r\n    axios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem(\"token\");\r\n    axios.get(`${process.env.REACT_APP_BASE_URL_BASE}auth/roles`)\r\n    .then((res) => {\r\n       setState((prevState)=>({\r\n        ...prevState,\r\n        permissionsList:res.data,loader:false\r\n      }));\r\n    }).catch((err) => {\r\n        Swal.fire(err.response?err.response.data.message:null, 'Please try again later');\r\n    })\r\n  },[])\r\n  const indexFormat = (cell, row, enumObject, index) => {\r\n    return (<>{index + 1}</>);\r\n  }\r\n  const displayDate = (date)=>{\r\n    return(<>{moment(date).format(\"MM/DD/YYYY\")}</>)\r\n  }\r\n  return (\r\n    <> {loader?<Spinner\r\n      className='loaderr'\r\n       color=\"primary\"\r\n      > \r\n      Loading...\r\n    </Spinner>:null}\r\n         <CardBody className='cardbg'>\r\n          <Row>\r\n            <Col ><h4><strong>Roles Permissions </strong></h4></Col>\r\n            <Col>\r\n                {permissions.canCreate?  <Button outline color=\"info\" size=\"sm\" className='buttonfloat' onClick={() => history(\"/permissions/create/new\")}>Add Role </Button>:null}\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <Card >\r\n                <BootstrapTable data={permissionsList} keyField=\"sno\" search striped hover multiColumnSearch={true} version='4'>\r\n                  <TableHeaderColumn width=\"100\" dataAlign='left' dataField='sno' dataFormat={indexFormat} dataSort>S No</TableHeaderColumn>\r\n                  <TableHeaderColumn width=\"160\"   dataField='roleName' dataSort>Role Name</TableHeaderColumn>\r\n                 <TableHeaderColumn width=\"100\" dataField='creationDate'  dataFormat={displayDate}>Creation Date</TableHeaderColumn>\r\n                 <TableHeaderColumn width=\"160\"   dataField='createdBy' dataSort>Created By</TableHeaderColumn>\r\n                   </BootstrapTable>\r\n                <CardFooter>\r\n                 </CardFooter>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n          </Row>\r\n        </CardBody> \r\n    </>\r\n  )\r\n}\r\nexport default PermissionsList;\r\n"],"names":["_useState","useState","permissionsList","totalPages","currentPage","loader","permissions","canCreate","canView","canUpdate","canDelete","_useState2","_slicedToArray","initialData","setState","history","useNavigate","useEffect","userid","localStorage","getItem","axios","concat","process","then","res","permission","data","roles","prevState","_objectSpread","catch","err","Swal","response","message","_jsxs","_Fragment","children","_jsx","Spinner","className","color","CardBody","Row","Col","Button","outline","size","onClick","Card","BootstrapTable","keyField","search","striped","hover","multiColumnSearch","version","TableHeaderColumn","width","dataAlign","dataField","dataFormat","cell","row","enumObject","index","dataSort","date","moment","format","CardFooter"],"sourceRoot":""}