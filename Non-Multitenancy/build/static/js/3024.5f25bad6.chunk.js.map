{"version":3,"file":"static/js/3024.5f25bad6.chunk.js","mappings":"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","sources":["views/pages/login/Login.js","../node_modules/yup-password/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport * as Yup from \"yup\";\nimport YupPassword from 'yup-password';\nYupPassword(Yup)\nimport { useNavigate } from 'react-router-dom';\nimport { Spinner,Row, Col } from 'reactstrap';\nimport './login.css'\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport LoginImage from '../../../assets/images/avatars/loginbackk.png';\nimport LoginSideImage from '../../../assets/images/avatars/babiespic.png';\nimport Logo from '../../../assets/images/logo/surgelogo.jpg';\nimport email from \"../../../assets/images/avatars/email.png\";\nimport pass from \"../../../assets/images/avatars/pass.png\";\nconst Login = () => {\n  const [formValues, setFormValues] = useState([{ email: \"\", password: \"\", loader: false }]); // accode: \"\", \n  const navigate = useNavigate();\n  const initialValues = {\n    email    : formValues.email,\n    password : formValues.password\n    // acCode: formValues.accode\n  }\n  const LoginSchema = () => Yup.object().shape({\n    email    : Yup.string().email('Invalid email').required('Email Required'),\n    password : Yup.string().required('Password is required').min(8, 'Password must be at least 8 characters').minLowercase(1, 'Password must contain at least 1 lower case letter')\n                  .minUppercase(1, 'Password must contain at least 1 upper case letter')\n                  .minNumbers(1, 'Password must contain at least 1 number')\n                  .minSymbols(1, 'Password must contain at least 1 special character'),\n  });\n \n  const userLoginSubmit = (e) => {\n    setFormValues({ ...formValues, loader: true });\n    let userloginRequestPayload = {\n      username : e.email,\n      password : e.password\n      // acCode: e.acCode\n    }    \n\n    axios.post(`${process.env.REACT_APP_BASE_URL_BASE}auth/login`, userloginRequestPayload, { filterResponse: \"filterResponse\" })\n      .then((res) => {\n        localStorage.setItem('role', res.data.user.roles[0].name)\n        localStorage.setItem('token', res.data.token)\n        localStorage.setItem('username', `${res.data.user.firstName}${res.data.user.lastName}`)\n        localStorage.setItem('useremail', res.data.user.email)\n        localStorage.setItem('userid', res.data.user.id)\n        localStorage.setItem('employmentType', res.data.user.employmentType.id)\n        if (res.status === 200) {\n          toast.success(\"User Login successful\", { theme: \"colored\" })\n          setTimeout(() => {\n            navigate(\"/dashboard\");\n          }, 500);\n        }\n      }).catch((err) => {\n        setFormValues({ ...formValues, loader: false });\n        toast.error(\"Invalid Credentials\", { theme: \"colored\" })\n      })\n  }\n  return (\n    <>\n      <ToastContainer />\n      {formValues.loader ? <Spinner className='loaderr' color=\"primary\" > Loading... </Spinner> : null}\n      <div class=\"loginBackground\">\n        <img src={LoginImage} alt=\"Login Image\" className='curvebackground' />\n        <div class=\"loginOuter\">\n          <div class='loginInner'>\n            <Row id=\"rowstyle\">\n              <Col md=\"6\" xs=\"12\">\n                <div>\n                  <div className='loginHeading'>\n                    <h5>WELCOME TO</h5>\n                    <img src={Logo} className='logostyles' />\n                    <span className='textstyle1'>Log in to get in the moment updates on the things that interest you</span>\n                  </div>\n                  <Formik\n                    initialValues={initialValues}\n                    validationSchema={LoginSchema}\n                    onSubmit={userLoginSubmit}\n                  >\n                    {({ values, handleChange, handleSubmit, errors, touched, handleBlur, isValid, dirty }) => (\n                      <Form>\n                        <Row>\n                          <div>\n                            <img src={email} alt=\"email\" className=\"loginemail\" />\n                            <input\n                              id=\"loginname\"\n                              placeholder='Username'\n                              type=\"email\"\n                              name=\"email\"\n                              value={values.email}\n                              onChange={handleChange}\n                              onBlur={handleBlur}\n                              className={errors.email && touched.email ? \"input-error\" : null}\n                            />\n                          </div>\n                          <ErrorMessage name=\"email\" render={msg => <div className=\"errmsg\">{msg}</div>} />\n                          <div className=\"second-input\">\n                            <img src={pass} alt=\"pass\" className=\"loginpass\" />\n                            <input\n                              type=\"password\"\n                              placeholder=\"Password\"\n                              id=\"loginname\"\n                              name=\"password\"\n                              value={values.password}\n                              onChange={handleChange}\n                              onBlur={handleBlur}\n                              className={errors.password && touched.password ? \"input-error\" : null}\n                            />\n                          </div>\n                          <ErrorMessage name=\"password\" render={msg => <div className=\"errmsg\">{msg}</div>} />\n                          {/* <div className=\"third-input\">\n                            <img src={pass} alt=\"ac\" className=\"loginac\" />\n                            <input\n                              type=\"text\"\n                              placeholder=\"Academy Code\"\n                              id=\"loginname\"\n                              name=\"acCode\"\n                              value={values.acCode}\n                              onChange={handleChange}\n                              onBlur={handleBlur}\n                              className={errors.accode && touched.accode ? \"input-error\" : null}\n                            />\n                          </div>\n                          <ErrorMessage name=\"acCode\" render={msg => <div className=\"errmsg\">{msg}</div>} /> */}\n                          <div >\n                             <p style={{float:\"right\",padding:\"0px 30px\"}}>Forgot your password? <Link className='customLink' to={'/login/forgotpassword'} >Click here</Link></p>\n                            <button className='button-login' type='submit'>Login</button>\n                          </div>\n                          <h6 className='horizanantalstyle'>Or</h6>\n                          <div className='mobilestyle'>\n                            <a href=\"https://twitter.com/minimalmonkey\" class=\"icon-button twitter\"><i class=\"fa fa-twitter\"></i><span></span></a>\n                            <a href=\"https://facebook.com\" class=\"icon-button facebook\"><i class=\"fa fa-facebook\"></i><span></span></a>\n                            <a href=\"https://plus.google.com\" class=\"icon-button google-plus\"><i class=\"fa fa-google-plus\"></i><span></span></a>\n                            <a href=\"https://linkedin.com\" class=\"icon-button linkedin\"><i class=\"fa fa-linkedin\"></i><span></span></a>\n                          </div>\n                        </Row>\n                      </Form>\n                    )}\n                  </Formik>\n                </div>\n              </Col>\n              <Col md=\"6\" xs=\"12\">\n                <Row className='textstyle'>Streamline your Taekwondo operations with us!</Row>\n                <img src={LoginSideImage} alt=\"Avatar\" className='babiespicstyles' />\n              </Col>\n            </Row>\n            <br />\n            <br />\n            <br />\n            <center> ACE © 2023 </center>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\nexport default Login;","'use strict'\n\n// pluralize\nconst p = function (word, num) {\n    return num === 1 ? word : `${word}s`\n}\n\nconst isNullOrUndefined = function (value) {\n    return value === null || value === undefined\n}\n\nfunction minLowercase(length = 1, message) {\n    const msg = message || '${path} must contain at least ${length} lowercase ' + p('letter', length)\n    return this.test({\n        name: 'minLowercase',\n        exclusive: true,\n        message: msg,\n        params: { length },\n        test(value) {\n            return isNullOrUndefined(value) || (value.match(/[a-z]/g) || []).length >= length\n        }\n    })\n} // minLowercase()\n\nfunction minUppercase(length = 1, message) {\n    const msg = message || '${path} must contain at least ${length} uppercase ' + p('letter', length)\n    return this.test({\n        name: 'minUppercase',\n        exclusive: true,\n        message: msg,\n        params: { length },\n        test(value) {\n            return isNullOrUndefined(value) || (value.match(/[A-Z]/g) || []).length >= length\n        }\n    })\n} // minUppercase()\n\nfunction minNumbers(length = 1, message) {\n    const msg = message || '${path} must contain at least ${length} ' + p('number', length)\n    return this.test({\n        name: 'minNumber',\n        exclusive: true,\n        message: msg,\n        params: { length },\n        test(value) {\n            return isNullOrUndefined(value) || (value.match(/[0-9]/g) || []).length >= length\n        }\n    })\n} // minNumber()\n\nfunction minSymbols(length = 1, message) {\n    const msg = message || '${path} must contain at least ${length} ' + p('symbol', length)\n    return this.test({\n        name: 'minSymbol',\n        exclusive: true,\n        message: msg,\n        params: { length },\n        test(value) {\n            return isNullOrUndefined(value) || (value.match(/[^a-zA-Z0-9\\s]/g) || []).length >= length\n        }\n    })\n} // minSymbol()\n\nfunction minRepeating(length = 2, message) {\n    const msg = message || '${path} must not contain sequences of more than ${length} repeated ' + p('character', length)\n    return this.test({\n        name: 'minRepeating',\n        exclusive: true,\n        message: msg,\n        params: { length: length },\n        test(value) {\n            return isNullOrUndefined(value) || ! new RegExp(`(.)\\\\1{${length},}`).test(value)\n        }\n    })\n} // minRepeating()\n\nfunction minWords(length = 2, message) {\n    const msg = message || '${path} must contain at least ${length} ' + p('word', length)\n    const rx = new RegExp('[a-zA-Z0-9]')\n    return this.test({\n        name: 'minWords',\n        exclusive: true,\n        message: msg,\n        params: { length: length },\n        test(value) {\n            return isNullOrUndefined(value) || value.split(' ').filter(v => !! v && rx.test(v)).length >= length\n        }\n    })\n} // minWords()\n\nfunction password() {\n    return this\n        .min(8)\n        .max(250)\n        .minLowercase(1)\n        .minUppercase(1)\n        .minNumbers(1)\n        .minSymbols(1)\n} // password()\n\nfunction setup(yup) {\n    yup.addMethod(yup.string, 'minLowercase', minLowercase)\n    yup.addMethod(yup.string, 'minUppercase', minUppercase)\n    yup.addMethod(yup.string, 'minNumber', minNumbers)\n    yup.addMethod(yup.string, 'minNumbers', minNumbers)\n    yup.addMethod(yup.string, 'minSymbol', minSymbols)\n    yup.addMethod(yup.string, 'minSymbols', minSymbols)\n    yup.addMethod(yup.string, 'minRepeating', minRepeating)\n    yup.addMethod(yup.string, 'minWords', minWords)\n    yup.addMethod(yup.string, 'password', password)\n}\n\nmodule.exports = setup\n"],"names":["YupPassword","Yup","_useState","useState","email","password","loader","_useState2","_slicedToArray","formValues","setFormValues","navigate","useNavigate","initialValues","_jsxs","_Fragment","children","_jsx","ToastContainer","Spinner","className","color","class","src","LoginImage","alt","Row","id","Col","md","xs","Logo","Formik","validationSchema","shape","required","min","minLowercase","minUppercase","minNumbers","minSymbols","onSubmit","e","_objectSpread","userloginRequestPayload","username","axios","concat","process","filterResponse","then","res","localStorage","setItem","data","user","roles","name","token","firstName","lastName","employmentType","status","toast","theme","setTimeout","catch","err","_ref","values","handleChange","errors","handleSubmit","touched","handleBlur","isValid","dirty","Form","placeholder","type","value","onChange","onBlur","ErrorMessage","render","msg","pass","style","float","padding","Link","to","href","LoginSideImage","p","word","num","isNullOrUndefined","undefined","length","arguments","message","this","test","exclusive","params","match","minRepeating","RegExp","minWords","rx","split","filter","v","max","module","exports","yup","addMethod","string"],"sourceRoot":""}