{"version":3,"file":"static/js/6768.f420b19e.chunk.js","mappings":"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","sources":["views/leveltesting/createLevelTesting.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { Col, Label, Card, CardBody, Row, Input, FormGroup, Button, Media, Spinner } from \"reactstrap\";\nimport { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport * as Yup from \"yup\";\nimport Axios from \"../../hoc/axiosConfig\";\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport axios from 'axios';\nimport moment from 'moment/moment';\nimport Select from 'react-select'; \nimport Swal from 'sweetalert2';\nimport DatePicker from \"react-datepicker\";\nimport emptyimage from \"../../assets/images/avatars/userempty.jpg\";\nlet dateToday = moment(new Date()).format(\"YYYY-MM-DD\");\nconst createLevelTesting = () => {\n  const [state, setState] = useState({ startDate: new Date(), master: null,program:null, class: null, loader: false });\n  const [programOptions, setProgramOptions] = useState([]);\n  const [masterOptions, setMasterOptions] = useState([]);\n  const [classOptions, setClassOptions] = useState([]);\n  const [attendenceTime, setAttendenceTime] = useState(\"\");\n  const [attendenceStartTime, setAttendenceStartTime] = useState(\"\");\n  const [studentAttendenceList, setStudentAttendenceList] = useState([]);\n  const [studentDetails, setStudentDetails] = useState([]);\n   const navigate = useNavigate();\n  useEffect(() => {\n     axios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem(\"token\");\n    axios.get(`${process.env.REACT_APP_BASE_URL_BASE}api/program-names`)\n      .then((res) => {\n         let programs = []\n        res.data.map((key, index) => {\n          programs.push({ value: key.id, label: key.name });\n        })\n        setProgramOptions(programs)\n      }).catch((err) => {\n        if (err.response.status === 401) {\n          Swal.fire('401 session expired..!', 'Please re-login');\n        }\n        else {\n          Swal.fire('Oops, something went wrong. Please try again later');\n        }\n      })\n  }, []);\n  const initialValues = {\n    startDate: state.startDate,\n    master: state.master,\n    class: state.class,\n  }\n  const setStartDate = (date, values) => {\n    values.startDate = date;\n    setState({ ...values });\n    let dat = moment(date).format(\"YYYY-MM-DD\")\n    Axios.get(`student-statuses/${dat}`).then(response => {\n      if(response.status===200){\n      setStudentAttendenceList(response.data);\n     }\n    }).catch((err) => {\n      Swal.fire(err , 'Please try again later');\n    })\n  } \n  const selectedRow = {\n    mode: 'checkbox',\n    showOnlySelected: true,\n    onSelect: (row, isSelected, rowIndex, e) => {\n        if (isSelected) {\n        const data = studentDetails\n        data.push(row)\n          setTimeout(() => { \n          setStudentDetails(data);\n           setState({ ...state });\n       }, 500);\n      } else {\n        const selectedData= []\n        studentDetails.map((mapdata,index)=>{\n          if(mapdata.studentId!==row.studentId){\n            selectedData.push(mapdata)\n          }\n        })\n         setTimeout(() => {\n           setStudentDetails(selectedData);\n        }, 500);\n      }\n    },\n    onSelectAll: (isSelect, rows, e) => {\n       if (isSelect) {\n        setStudentDetails(rows);\n      }\n      \n     if (!isSelect)  {\n        setStudentDetails([]);\n      }\n    }\n  };\n  const pictureFormat = (picture) => {\n    let studentPicture = picture === null ? emptyimage : `${process.env.REACT_APP_BASE_URL_BASE}auth/student/image/${picture}`;\n    return (\n      <Media>\n        <Media src={studentPicture} id=\"mediastyle\" />\n      </Media>\n    )\n  }\n  const attendenceSubmit = (values) => {\n     let payload = []\n      studentDetails.map((mapdat,index)=>{\n          payload.push({\n            \"levelId\": mapdat.currentLevel?mapdat.currentLevel.id:null,\n            \"studentId\": mapdat.studentId,\n            \"certificateName\": mapdat.certificate?mapdat.certificate.backgroundPhoto?mapdat.certificate.backgroundPhoto:null:null\n          })\n      })\n        setTimeout(() => {\n        axios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem(\"token\");\n    axios.post(`${process.env.REACT_APP_BASE_URL}/level-testing/promote`, payload)\n      .then((res) => {\n         if (res.status === 201) {\n          toast.success(\"Successfully\", { theme: \"colored\" });\n          setStudentDetails([])\n        }\n      }).catch((err) => {\n        if (err.response.status === 401) {\n          Swal.fire('401 session expired..!', 'Please re-login');\n        }\n        else {\n           Swal.fire(err.response.data.message,'Please try again later');\n        }\n      })\n      }, 500);\n  }\n  \n  const displaycurrentLevel = (cell, row) => {\n    return (<span>{row.currentLevel.name? row.currentLevel.name : null}</span>);\n  }\n  const displaynextLevel = (cell, row) => {\n    return (<span>{row.nextLevel.name? row.nextLevel.name : null}</span>);\n  }\n   const displaysubLevels = (cell, row) => {\n   \n    let name ='';\n    if(row.subLevels ){\n      row.subLevels.map((mapdat,index)=>{\n          if(index===0){\n              name=mapdat.shortName\n          }else{\n              name=name+\", \"+mapdat.shortName \n          }\n      })\n   }\n   return name\n  }\n  return (\n    <> \n      <ToastContainer />\n      {state.loader ? <Spinner\n        className='loaderr'\n        color=\"primary\"\n      >\n        Loading...\n      </Spinner> : null}\n      <Card >\n        <CardBody className='cardbg'>\n          <h4><strong>Belt Testing ({dateToday})</strong></h4>\n          <Card className='attendencecard' >\n            <Formik\n              enableReinitialize=\"true\"\n              initialValues={initialValues}\n              onSubmit={attendenceSubmit}\n            >\n              {({ values, handleChange, handleSubmit, errors, touched, handleBlur, isValid, dirty, setFieldValue }) => (\n                <Form className=\"add-edit-user-form\" onSubmit={handleSubmit}>\n                  <Row>\n                    <Col md={3}>\n                     <FormGroup>\n                        <Label for=\"startDate\" >Search By Date</Label>\n                        <DatePicker\n                          className='studentsattendancecolor'\n                          name=\"startDate\"\n                          selected={values.startDate ? new Date(values.startDate) : null}\n                          onChange={(date) => setStartDate(date, values)}\n                          placeholderText=\"mm/dd/yyyy\"\n                          />\n                      </FormGroup>\n                    </Col>  \n                     <Col md={2}  >\n                      <FormGroup style={{marginTop:\"14%\"}}>\n                        <Button   type=\"submit\" disabled={studentDetails.length<=0 ? true : false}>Promote</Button>\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                </Form>\n              )}\n            </Formik> \n          </Card>\n          <hr />\n           <Row className='rowborder'>\n            <Card className='marginStyleForTablee'>\n              <BootstrapTable data={studentAttendenceList} selectRow={selectedRow} keyField=\"studentId\" search tableContainerClass='studenttablescro' multiColumnSearch=\"true\">\n                <TableHeaderColumn width=\"100\" dataField='studentId' hidden >unique field</TableHeaderColumn>\n                <TableHeaderColumn  width=\"150\" dataField='studentName'>Student Name</TableHeaderColumn>\n                <TableHeaderColumn width=\"150\" dataField='currentLevel' dataFormat={displaycurrentLevel}>Current Level</TableHeaderColumn>\n                <TableHeaderColumn  width=\"130\" dataField='nextLevel' dataFormat={displaynextLevel} >Next Level</TableHeaderColumn>\n                <TableHeaderColumn width=\"100\" dataField='phone' dataFormat={displaysubLevels} >Tip</TableHeaderColumn>\n              </BootstrapTable>\n            </Card>\n          </Row>\n          <Row>\n          </Row>\n        </CardBody>\n      </Card>\n    </>\n  )\n}\nexport default createLevelTesting;"],"names":["dateToday","moment","Date","format","_useState","useState","startDate","master","program","class","loader","_useState2","_slicedToArray","state","setState","_useState3","_useState4","setProgramOptions","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","studentAttendenceList","setStudentAttendenceList","_useState15","_useState16","studentDetails","setStudentDetails","useNavigate","useEffect","axios","localStorage","getItem","concat","process","then","res","programs","data","map","key","index","push","value","id","label","name","catch","err","response","status","Swal","initialValues","selectedRow","mode","showOnlySelected","onSelect","row","isSelected","rowIndex","e","setTimeout","_objectSpread","selectedData","mapdata","studentId","onSelectAll","isSelect","rows","_jsxs","_Fragment","children","_jsx","ToastContainer","Spinner","className","color","Card","CardBody","Formik","enableReinitialize","onSubmit","values","payload","mapdat","currentLevel","certificate","backgroundPhoto","toast","theme","message","_ref","handleSubmit","handleChange","errors","touched","handleBlur","isValid","dirty","setFieldValue","Form","Row","Col","md","FormGroup","Label","for","DatePicker","selected","onChange","date","dat","Axios","setStartDate","placeholderText","style","marginTop","Button","type","disabled","length","BootstrapTable","selectRow","keyField","search","tableContainerClass","multiColumnSearch","TableHeaderColumn","width","dataField","hidden","dataFormat","cell","nextLevel","subLevels","shortName"],"sourceRoot":""}